{"mappings":"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","sources":["<anon>","src/sneaky.js","src/user.js","src/scenes/game/index.js","src/scenes/game/game.js","src/sfx.js","src/scenes/game/vigilance.js","src/scenes/game/objects.js","src/scenes/game/player.js","src/scenes/gameOver/index.js"],"sourcesContent":["const $741e5dc94144fd09$export$95400d94d43a5402 = {\n    leftKey: 65,\n    upKey: 87,\n    rightKey: 68,\n    downKey: 83,\n    aKey: \"K\".charCodeAt(),\n    bKey: \"J\".charCodeAt()\n};\nclass $741e5dc94144fd09$export$1f44aaf2ec115b54 {\n    constructor(trigger = ()=>{}){\n        this.interval = null;\n        this.eventsTrigger = trigger;\n        document.addEventListener(\"keydown\", ({ keyCode: keyCode })=>{\n            this.eventsTrigger(keyCode);\n        });\n        const items = [\n            ...document.querySelectorAll(\".input\")\n        ];\n        items.forEach((button)=>{\n            const eventStart = (event)=>{\n                this.interval = setInterval(()=>{\n                    const buttonName = event.target.className.split(\" \").filter((name)=>name !== \"input\")[0];\n                    this.eventsTrigger($741e5dc94144fd09$export$95400d94d43a5402[`${buttonName}Key`]);\n                }, 50);\n            };\n            const eventEnd = (_)=>{\n                clearInterval(this.interval);\n            };\n            button.addEventListener(\"touchstart\", eventStart);\n            button.addEventListener(\"touchend\", eventEnd);\n            button.addEventListener(\"mousedown\", eventStart);\n            button.addEventListener(\"mouseup\", eventEnd);\n        });\n        document.querySelector(\"body\").addEventListener(\"touchend\", (e)=>{\n            e.preventDefault();\n        });\n    }\n    changeTrigger(trigger) {\n        this.eventsTrigger = trigger;\n    }\n}\n\n\nconst $a55e885f30d13062$var$tableOfFreq = {\n    C0: 16.35,\n    Db0: 17.32,\n    D0: 18.35,\n    Eb0: 19.45,\n    E0: 20.60,\n    F0: 21.83,\n    Gb0: 23.12,\n    G0: 24.50,\n    Ab0: 25.96,\n    A0: 27.50,\n    Bb0: 29.14,\n    B0: 30.87,\n    C1: 32.70,\n    Db1: 34.65,\n    D1: 36.71,\n    Eb1: 38.89,\n    E1: 41.20,\n    F1: 43.65,\n    Gb1: 46.25,\n    G1: 49.00,\n    Ab1: 51.91,\n    A1: 55.00,\n    Bb1: 58.27,\n    B1: 61.74,\n    C2: 65.41,\n    Db2: 69.30,\n    D2: 73.42,\n    Eb2: 77.78,\n    E2: 82.41,\n    F2: 87.31,\n    Gb2: 92.50,\n    G2: 98.00,\n    Ab2: 103.83,\n    A2: 110.00,\n    Bb2: 116.54,\n    B2: 123.47,\n    C3: 130.81,\n    Db3: 138.59,\n    D3: 146.83,\n    Eb3: 155.56,\n    E3: 164.81,\n    F3: 174.61,\n    Gb3: 185.00,\n    G3: 196.00,\n    Ab3: 207.65,\n    A3: 220.00,\n    Bb3: 233.08,\n    B3: 246.94,\n    C4: 261.63,\n    Db4: 277.18,\n    D4: 293.66,\n    Eb4: 311.13,\n    E4: 329.63,\n    F4: 349.23,\n    Gb4: 369.99,\n    G4: 392.00,\n    Ab4: 415.30,\n    A4: 440.00,\n    Bb4: 466.16,\n    B4: 493.88,\n    C5: 523.25,\n    Db5: 554.37,\n    D5: 587.33,\n    Eb5: 622.25,\n    E5: 659.25,\n    F5: 698.46,\n    Gb5: 739.99,\n    G5: 783.99,\n    Ab5: 830.61,\n    A5: 880.00,\n    Bb5: 932.33,\n    B5: 987.77,\n    C6: 1046.50,\n    Db6: 1108.73,\n    D6: 1174.66,\n    Eb6: 1244.51,\n    E6: 1318.51,\n    F6: 1396.91,\n    Gb6: 1479.98,\n    G6: 1567.98,\n    Ab6: 1661.22,\n    A6: 1760.00,\n    Bb6: 1864.66,\n    B6: 1975.53,\n    C7: 2093.00,\n    Db7: 2217.46,\n    D7: 2349.32,\n    Eb7: 2489.02,\n    E7: 2637.02,\n    F7: 2793.83,\n    Gb7: 2959.96,\n    G7: 3135.96,\n    Ab7: 3322.44,\n    A7: 3520.00,\n    Bb7: 3729.31,\n    B7: 3951.07,\n    C8: 4186.01,\n    Db8: 4434.92,\n    D8: 4698.63,\n    Eb8: 4978.03,\n    E8: 5274.04,\n    F8: 5587.65,\n    Gb8: 5919.91,\n    G8: 6271.93,\n    Ab8: 6644.88,\n    A8: 7040.00,\n    Bb8: 7458.62,\n    B8: 7902.13\n};\nconst $a55e885f30d13062$var$audioCtx = new (window.AudioContext || window.webkitAudioContext || window.audioContext)();\nconst $a55e885f30d13062$var$beep = (duration, frequency, type, volume, second = false)=>{\n    const noteLength = duration / 1000;\n    const oscillator = $a55e885f30d13062$var$audioCtx.createOscillator();\n    const gainNode = $a55e885f30d13062$var$audioCtx.createGain();\n    gainNode.connect($a55e885f30d13062$var$audioCtx.destination);\n    const attackTime = 0.01;\n    const sustainLevel = volume;\n    const releaseTime = 0.4;\n    gainNode.gain.setValueAtTime(0, 0);\n    gainNode.gain.linearRampToValueAtTime(sustainLevel, $a55e885f30d13062$var$audioCtx.currentTime + noteLength * attackTime);\n    gainNode.gain.setValueAtTime(sustainLevel, $a55e885f30d13062$var$audioCtx.currentTime + noteLength - noteLength * releaseTime);\n    gainNode.gain.linearRampToValueAtTime(0, $a55e885f30d13062$var$audioCtx.currentTime + noteLength);\n    oscillator.type = type;\n    oscillator.frequency.setValueAtTime(frequency, 0);\n    if (second) oscillator.frequency.linearRampToValueAtTime(second, $a55e885f30d13062$var$audioCtx.currentTime + noteLength);\n    oscillator.start(0);\n    oscillator.stop($a55e885f30d13062$var$audioCtx.currentTime + noteLength);\n    oscillator.connect(gainNode);\n};\nconst $a55e885f30d13062$export$68baa0dba130a7c0 = ([note, ...notes], volume = 0.1, type = \"triangle\")=>{\n    if (!note) return;\n    const [duration, frequency] = note;\n    $a55e885f30d13062$var$beep(duration, frequency, type, volume);\n    const timer = setTimeout(()=>{\n        clearTimeout(timer);\n        $a55e885f30d13062$export$68baa0dba130a7c0(notes, volume, type);\n    }, duration);\n};\nconst $a55e885f30d13062$export$def29a33f8fb4446 = (frequencies, durations)=>{\n    return frequencies.map((note, index)=>{\n        return [\n            durations[index],\n            $a55e885f30d13062$var$tableOfFreq[note] || 0\n        ];\n    });\n};\nconst $a55e885f30d13062$export$270967f0cf9c45d3 = (_)=>{\n    $a55e885f30d13062$export$68baa0dba130a7c0($a55e885f30d13062$export$def29a33f8fb4446([\n        \"Fb2\",\n        \"F2\",\n        \"Gb2\",\n        \"G2\",\n        \"Ab2\",\n        \"A2\",\n        \"Bb2\",\n        \"B2\",\n        \"Bb2\",\n        \"C3\",\n        \"Db3\",\n        \"D3\"\n    ], [\n        40,\n        160,\n        40,\n        160,\n        40,\n        160,\n        40,\n        160,\n        40,\n        160,\n        40,\n        160\n    ]), 0.1, \"square\");\n};\nconst $a55e885f30d13062$export$7eac8da43dbf25b2 = (game)=>{\n    if (game.gameOver) return;\n    $a55e885f30d13062$var$beep(1500, 523.25, \"triangle\", 0.1, 880.00);\n    setTimeout(()=>{\n        $a55e885f30d13062$export$7eac8da43dbf25b2(game);\n    }, 1500);\n};\n\n\n\n\n\n\n\n\n\n\n\n\nconst $91ca95b993497c18$var$ctxBg = document.getElementById(\"background\").getContext(\"2d\");\nconst $91ca95b993497c18$var$leftText = (text, y)=>{\n    $91ca95b993497c18$var$ctxBg.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[1];\n    $91ca95b993497c18$var$ctxBg.textAlign = \"left\";\n    $91ca95b993497c18$var$ctxBg.fillText(text, 50, y);\n};\nconst $91ca95b993497c18$var$rightText = (text, y)=>{\n    $91ca95b993497c18$var$ctxBg.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[5];\n    if (parseInt(text, 10) < 0) $91ca95b993497c18$var$ctxBg.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[4];\n    $91ca95b993497c18$var$ctxBg.textAlign = \"right\";\n    $91ca95b993497c18$var$ctxBg.fillText(`$${text}`, 450, y);\n};\nconst $91ca95b993497c18$export$611b5196d80f8d0e = (user)=>{\n    const loot = JSON.parse(JSON.stringify((0, $d40f0d5cf5f894a3$export$119d2a93e2780362).brain.get(\"loot\")));\n    console.log(loot);\n    (0, $a97524d8df662a03$export$aad8462122ac592b)();\n    $91ca95b993497c18$var$ctxBg.font = '14px \"Press Start 2P\"';\n    const bail = (0, $d7af1a68c6d62be5$export$2616165974278734).instances.filter((pl)=>{\n        return !pl.playerScaped || pl.freezed;\n    }).map((_)=>{\n        return [\n            \"Enterpreneur caught\",\n            -2000\n        ];\n    });\n    let lastK;\n    const total = [\n        [\n            \"Incoming balance\",\n            (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).brain.get(\"balance\")\n        ],\n        ...loot,\n        [\n            \"Daily expenses\",\n            -52\n        ],\n        ...bail\n    ].map(([desc, value], key)=>{\n        lastK = key;\n        $91ca95b993497c18$var$leftText(desc, 100 + key * 25);\n        $91ca95b993497c18$var$rightText(value, 100 + key * 25);\n        return value;\n    }).reduce((prev, curr)=>prev + curr);\n    $91ca95b993497c18$var$leftText(\"Total\", 100 + (lastK + 3) * 25);\n    $91ca95b993497c18$var$rightText(total, 100 + (lastK + 3) * 25);\n    $91ca95b993497c18$var$ctxBg.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[1];\n    if (total < 0) {\n        $91ca95b993497c18$var$ctxBg.textAlign = \"left\";\n        $91ca95b993497c18$var$ctxBg.fillText('Your \"carreer\" is over', 50, 400);\n    }\n    (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).brain.set(\"balance\", Math.max(0, total));\n    setTimeout(()=>{\n        $91ca95b993497c18$var$ctxBg.textAlign = \"left\";\n        $91ca95b993497c18$var$ctxBg.fillText(\"[> Go back\", 50, 450);\n        user.changeTrigger($91ca95b993497c18$var$eventsTrigger(user));\n    }, 2000);\n};\nlet $91ca95b993497c18$var$throttler = -Infinity;\nconst $91ca95b993497c18$var$eventsTrigger = (user)=>(keyCode)=>{\n        const now = new Date().getTime();\n        if (now - $91ca95b993497c18$var$throttler < 60) return;\n        $91ca95b993497c18$var$throttler = new Date().getTime();\n        $91ca95b993497c18$var$playerActions(keyCode, user);\n    };\nconst $91ca95b993497c18$var$playerActions = (keyCode, user)=>{\n    switch(keyCode){\n        case (0, $741e5dc94144fd09$export$95400d94d43a5402).leftKey:\n            (0, $1abd0cf01f2b19a8$export$29901fa26cd744fa)(\"./levels/0001\", user);\n            break;\n    }\n};\n\n\nconst $d7af1a68c6d62be5$var$ctxVfx = document.getElementById(\"vfx\").getContext(\"2d\");\nclass $d7af1a68c6d62be5$export$2616165974278734 {\n    constructor(ctx, x, y, active = false){\n        this.position = {\n            x: x,\n            y: y,\n            flip: true,\n            inside: false,\n            col: {\n                x: 8,\n                y: 32,\n                w: 16,\n                h: 16\n            }\n        };\n        this.stance = \"standing\";\n        this.active = active;\n        this.ctx = ctx;\n        this.playerScaped = false;\n        this.freezed = false;\n        this.properties = {\n            foundMessage: \"Intruder found!\"\n        };\n        this.x = x;\n        this.y = y;\n        this.clearText = ()=>$d7af1a68c6d62be5$export$2616165974278734.clearText(this);\n        if (!$d7af1a68c6d62be5$export$2616165974278734.instances) $d7af1a68c6d62be5$export$2616165974278734.instances = [];\n        $d7af1a68c6d62be5$export$2616165974278734.instances.push(this);\n    }\n    static create(...params) {\n        return new $d7af1a68c6d62be5$export$2616165974278734(...params);\n    }\n    static getCurrent() {\n        return $d7af1a68c6d62be5$export$2616165974278734.instances.find((player)=>player.active);\n    }\n    static clearText(obj) {\n        if (obj.textBound) {\n            const bounds = obj.textBound;\n            $d7af1a68c6d62be5$var$ctxVfx.clearRect(bounds.x - 1, bounds.y - 1, bounds.w + 2, bounds.h + 2);\n        }\n    }\n    setBound() {\n        this.bound = {\n            x: this.position.x + this.position.col.x,\n            y: this.position.y + this.position.col.y,\n            w: this.position.col.w,\n            h: this.position.col.h\n        };\n    }\n    toggleActivation() {\n        this.active = !this.active;\n        if (this.playerScaped) return;\n        this.draw();\n        if (!this.active) return;\n        const offset = this.position.flip ? 16 : 12;\n        this.ctx.beginPath();\n        this.ctx.rect(this.position.x + offset, this.position.y + 24, 4, 4);\n        this.ctx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[1];\n        this.ctx.fill();\n        this.ctx.closePath();\n    }\n    return() {\n        if (!this.playerScaped) return;\n        this.playerScaped = false;\n        const { x: x, y: y } = this;\n        if (y < 20) this.y = 20;\n        if (x < 100) this.x = 100;\n        if (x > 400) this.x = 400;\n        (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).displayText(\"Returned\", this);\n        setTimeout(()=>{\n            this.clearText();\n        }, 1000);\n    }\n    scaped(x, y) {\n        if (x === -24 || x === 504 || y === -32 || y === 480) {\n            $d7af1a68c6d62be5$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[1];\n            if (y < 20) this.y = 20;\n            if (x < 100) this.x = 100;\n            if (x > 400) this.x = 400;\n            (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).displayText(\"Escaped\", this);\n            setTimeout(()=>{\n                this.clearText();\n            }, 1000);\n            this.playerScaped = true;\n            $d7af1a68c6d62be5$export$2616165974278734.instances.forEach((player)=>player.toggleActivation());\n            this.ctx.clearRect(0, 0, 512, 512);\n            if (!$d7af1a68c6d62be5$export$2616165974278734.instances.some((pl)=>!pl.playerScaped)) {\n                (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).gameOver = true;\n                clearInterval((0, $d40f0d5cf5f894a3$export$119d2a93e2780362).timer);\n                (0, $91ca95b993497c18$export$611b5196d80f8d0e)((0, $d40f0d5cf5f894a3$export$119d2a93e2780362).user);\n            }\n        }\n        return this.playerScaped;\n    }\n    move({ x: x = this.position.x, y: y = this.position.y }, jump = false) {\n        if ((0, $d40f0d5cf5f894a3$export$119d2a93e2780362).gameOver || this.playerScaped || this.freezed) return;\n        this.movement = \"up\";\n        if (x - this.position.x > 0) this.movement = \"right\";\n        if (x - this.position.x < 0) this.movement = \"left\";\n        if (y - this.position.y > 0) this.movement = \"down\";\n        this.setBound();\n        if (this.interactingWith && this.interactingWith.properties.constraints) {\n            const { x: oX, y: oY } = this.interactingWith;\n            const pX = this.position.x + 8;\n            const pY = this.position.col.y + this.position.y;\n            let relative = \"up\";\n            if (oX < pX) relative = \"left\";\n            else if (oX > pX) relative = \"right\";\n            else if (oY > pY) relative = \"down\";\n            // dont let move char if not in constraints\n            if (!this.interactingWith.properties.constraints.includes(this.movement)) return this.interactingWith.changeConditions();\n            if (relative === \"up\" && this.movement === \"down\" || relative === \"down\" && this.movement === \"up\") {\n                this.interactingWith.reset();\n                this.stance = \"standing\";\n                this.draw();\n                this.interactingWith.draw();\n                delete this.interactingWith;\n                return;\n            }\n        }\n        // we moved away, lets clear the object\n        delete this.interactingWith;\n        const computed = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).computePosition(x, y + 16);\n        if (!jump) {\n            if (this.scaped(x, y)) return;\n            if (computed.x < 1 || computed.x > 32 || computed.y < 2 || computed.y > 32) return;\n            if ((0, $9966339ff104769c$export$6738a6d9146a0cdc).activateObject(x, y)) return;\n            if ((0, $d40f0d5cf5f894a3$export$119d2a93e2780362).collitionMap[computed.collitionIndex] !== 0) return;\n        }\n        this.position.x = x;\n        this.position.y = y;\n        this.x = x;\n        this.y = y;\n        this.width = this.bound.w;\n        (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).testTrigger(computed.collitionIndex, this);\n        (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).testHalt(computed.collitionIndex);\n        this.draw();\n    }\n    draw() {\n        this.setBound();\n        const { collitionIndex: collitionIndex } = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).computePosition(this.position.x, this.position.y);\n        this.position.inside = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).insideMap[collitionIndex] !== 0;\n        this.ctx.beginPath();\n        this.ctx.clearRect(0, 0, 512, 512);\n        let w = 32;\n        let h = 48;\n        let kneelOffset = {\n            x: 0,\n            y: 0\n        };\n        let [spriteX, spriteY] = {\n            // flipped, inside\n            \"false,false\": [\n                64,\n                80\n            ],\n            \"true,false\": [\n                32,\n                80\n            ],\n            \"true,true\": [\n                32,\n                128\n            ],\n            \"false,true\": [\n                64,\n                128\n            ]\n        }[[\n            this.position.flip,\n            this.position.inside\n        ].join(\",\")];\n        if (this.stance === \"kneeled\") {\n            w = 32;\n            h = 32;\n            spriteX = 0;\n            spriteY = 96;\n            if (this.position.inside) spriteY = 144;\n            kneelOffset = {\n                x: 4,\n                y: 8\n            };\n        }\n        this.ctx.drawImage((0, $1abd0cf01f2b19a8$export$49dc942d7cd17996), spriteX, spriteY, w, h, this.position.x + kneelOffset.x, this.position.y + kneelOffset.y, w, h);\n        if (0, $d40f0d5cf5f894a3$export$b72fc7cdd53dd289) {\n            // draw collition on player\n            this.ctx.rect(this.bound.x, this.bound.y, this.bound.w, this.bound.h);\n            this.ctx.strokeStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[1];\n            this.ctx.stroke();\n        }\n        this.ctx.closePath();\n        (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).setSight();\n    }\n}\n\n\n\n\nconst $9966339ff104769c$var$ctxVfx = document.getElementById(\"vfx\").getContext(\"2d\");\nclass $9966339ff104769c$export$6738a6d9146a0cdc {\n    constructor(obj){\n        this.ctx = document.getElementById(\"objects\").getContext(\"2d\");\n        Object.entries(obj).forEach(([key, value])=>{\n            this[key] = JSON.parse(JSON.stringify(value));\n        });\n        const proto = this.properties;\n        this.state = !!this.state;\n        this.combinationStep = 0;\n        this.combinationTicks = 0;\n        this.combinationFailed = false;\n        this.combinationSuccess = false;\n        this.clearText = ()=>$9966339ff104769c$export$6738a6d9146a0cdc.clearText(this);\n        this.col = {\n            x: this.x + proto.col.x,\n            y: this.y + proto.col.y,\n            w: proto.col.w,\n            h: proto.col.h\n        };\n        this.collitionIndex = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).computePosition(this.col.x, this.col.y).collitionIndex - 1;\n    }\n    static setPrototypes(objs) {\n        $9966339ff104769c$export$6738a6d9146a0cdc.prototypes = objs.filter(({ type: type })=>type === \"prototype\");\n    }\n    static clearText(obj) {\n        if (obj.textBound) {\n            const bounds = obj.textBound;\n            $9966339ff104769c$var$ctxVfx.clearRect(bounds.x - 1, bounds.y - 1, bounds.w + 2, bounds.h + 2);\n        }\n    }\n    static setObjects(objs) {\n        objs.filter(({ type: type })=>type !== \"prototype\").forEach((obj)=>{\n            $9966339ff104769c$export$6738a6d9146a0cdc.addObject(obj);\n        });\n    }\n    static addObject(obj) {\n        if (!obj.properties) obj.properties = {};\n        if (Array.isArray(obj.properties)) {\n            const tmpProps = {};\n            obj.properties.forEach(({ name: name, value: value })=>{\n                tmpProps[name] = value;\n            });\n            obj.properties = tmpProps;\n        }\n        $9966339ff104769c$export$6738a6d9146a0cdc.prototypes.find((prot)=>prot.name === obj.type).properties.forEach(({ name: name, value: value })=>{\n            obj.properties[name] = JSON.parse(value);\n        });\n        const nobj = new $9966339ff104769c$export$6738a6d9146a0cdc(obj);\n        if (!$9966339ff104769c$export$6738a6d9146a0cdc.instances) $9966339ff104769c$export$6738a6d9146a0cdc.instances = [];\n        $9966339ff104769c$export$6738a6d9146a0cdc.instances.push(nobj);\n        nobj.draw();\n        return nobj;\n    }\n    static returnCollition(x, y, ply) {\n        const left1 = x;\n        const right1 = x + ply.bound.w;\n        const top1 = y;\n        const bottom1 = y + ply.bound.h;\n        return $9966339ff104769c$export$6738a6d9146a0cdc.instances.find((itm)=>{\n            const left2 = itm.col.x;\n            const right2 = itm.col.x + itm.col.w;\n            const top2 = itm.col.y;\n            const bottom2 = itm.col.y + itm.col.h;\n            return left1 < right2 && right1 > left2 && top1 < bottom2 && bottom1 > top2;\n        });\n    }\n    static activateObject(intentedX, intentedY) {\n        const ply = (0, $d7af1a68c6d62be5$export$2616165974278734).getCurrent();\n        const x = intentedX + ply.position.col.x;\n        const y = intentedY + ply.position.col.y;\n        const obj = $9966339ff104769c$export$6738a6d9146a0cdc.returnCollition(x, y, ply);\n        if (!obj) return false;\n        if (obj.properties.restrictFrom?.includes(ply.movement)) return;\n        let direction = {\n            x: 32,\n            y: 0\n        };\n        if (x < ply.position.x + 8) direction.x = -32;\n        if (y < ply.position.y + 32) direction = {\n            x: 0,\n            y: -48\n        };\n        if (y > ply.position.y + 32) direction = {\n            x: 0,\n            y: 48\n        };\n        ply.interactingWith = obj;\n        if (obj.state === true) {\n            if (obj.properties.gateway) ply.move({\n                x: ply.position.x + direction.x,\n                y: ply.position.y + direction.y\n            }, true);\n            if (obj.properties.returnState) {\n                obj.setState(false);\n                obj.draw();\n                return false;\n            }\n        }\n        if (obj.properties.interactive) {\n            ply.stance = \"kneeled\";\n            ply.draw();\n        }\n        if (obj.properties.changeConditions) return obj.changeConditions();\n        if (!obj.state) obj.setState(true);\n        obj.draw();\n        return false;\n    }\n    draw() {\n        if (this.type === \"door\") (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).toggleVisibility(this);\n        const proto = this.properties;\n        this.ctx.clearRect(this.x, this.y, this.width, this.height);\n        if (this.type === \"camera\") {\n            const normAlt = this.state ? \"\" : \"Alt\";\n            proto[this.state] = this[`${this.direction}${normAlt}`];\n        }\n        this.ctx.drawImage((0, $1abd0cf01f2b19a8$export$49dc942d7cd17996), proto[this.state].x, proto[this.state].y, this.width, this.height, this.x, this.y, this.width, this.height // destination height\n        );\n        if (this.type === \"statue\") this.statue();\n        if (0, $d40f0d5cf5f894a3$export$b72fc7cdd53dd289) {\n            // draw collition on object\n            this.ctx.rect(this.col.x, this.col.y, this.col.w, this.col.h);\n            this.ctx.stroke();\n        }\n    }\n    setState(value) {\n        if (this.type === \"fuse\") (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).hasEnergy = !value;\n        if (!this.state && value) {\n            if ([\n                \"computer\",\n                \"safe\",\n                \"statue\"\n            ].includes(this.type)) this.success();\n        }\n        this.state = value;\n        (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).triggerSight();\n    }\n    changeConditions() {\n        if (this[this.type]) this[this.type]();\n    }\n    success() {\n        const tableOfValues = {\n            computer: [\n                [\n                    \"Cat Pictures\",\n                    1\n                ],\n                [\n                    \"Blackmail evidence\",\n                    1000\n                ],\n                [\n                    \"Confidential documents\",\n                    2000\n                ]\n            ],\n            safe: [\n                [\n                    \"Some cash\",\n                    500\n                ],\n                [\n                    \"Good cash\",\n                    1000\n                ],\n                [\n                    \"Very good cash\",\n                    1500\n                ],\n                [\n                    \"Confidential documents\",\n                    2000\n                ],\n                [\n                    \"Diamonds\",\n                    3000\n                ]\n            ],\n            statue: [\n                [\n                    \"Valuable statue\",\n                    100\n                ],\n                [\n                    \"Limited edition figure\",\n                    300\n                ],\n                [\n                    \"Action figure\",\n                    70\n                ],\n                [\n                    \"Collectable toy\",\n                    80\n                ]\n            ]\n        };\n        const set = tableOfValues[this.type];\n        if (!(0, $d40f0d5cf5f894a3$export$119d2a93e2780362).brain.loot) (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).brain.set(\"loot\", []);\n        const loot = set[~~(set.length * Math.random() | 0)];\n        (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).brain.push(\"loot\", loot);\n    }\n    reset() {\n        if (this.properties.returnState) {\n            this.setState(false);\n            this.draw();\n        }\n        if (this.type === \"safe\" || this.type === \"computer\") {\n            this.combinationStep = 0;\n            this.combinationTicks = 0;\n            this.combinationFailed = false;\n            this.booting = false;\n            this.clearText();\n            $9966339ff104769c$var$ctxVfx.clearRect(this.x + 8, this.y + 4, 16, 8);\n            if (this.type === \"computer\") {\n                (0, $a55e885f30d13062$export$68baa0dba130a7c0)((0, $a55e885f30d13062$export$def29a33f8fb4446)([\n                    \"E4\",\n                    \"G3\"\n                ], [\n                    60,\n                    100\n                ]), 0.4);\n                if (this.bootingTime) clearTimeout(this.bootingTime);\n            }\n        }\n    }\n    computer() {\n        const getNewDirection = (prev)=>{\n            const directions = [\n                \"left\",\n                \"up\",\n                \"right\"\n            ];\n            let direction = prev;\n            while(direction === prev)direction = directions[Math.floor(Math.random() * directions.length)];\n            return direction;\n        };\n        if (!this.combination) {\n            this.combination = [];\n            let prev = null;\n            for(let x = 0; x <= 10; x++){\n                const newDirection = getNewDirection(prev);\n                this.combination.push(newDirection);\n                prev = newDirection;\n            }\n        }\n        if (this.booting) return;\n        if (this.combinationStep === 0) {\n            this.booting = true;\n            this.computerDisplay();\n            (0, $a55e885f30d13062$export$68baa0dba130a7c0)((0, $a55e885f30d13062$export$def29a33f8fb4446)([\n                \"G3\",\n                \"E4\"\n            ], [\n                60,\n                100\n            ]), 0.4);\n            this.bootingTime = setTimeout(()=>{\n                this.combinationStep += 1;\n                this.computerDisplay();\n                this.booting = false;\n            }, 1000);\n            return;\n        }\n        const ply = (0, $d7af1a68c6d62be5$export$2616165974278734).getCurrent();\n        const direction = this.combination[this.combinationStep];\n        if (!direction) {\n            this.combinationSuccess = true;\n            this.computerDisplay();\n            $9966339ff104769c$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[1];\n            (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).displayText(\"Computer hacked\", this);\n            this.setState(true);\n            return;\n        }\n        if (this.combinationSuccess || this.combinationFailed) return;\n        if (direction === ply.movement) {\n            this.combinationStep += 1;\n            if (!this.combination[this.combinationStep]) return this.computer();\n        } else this.combinationFailed = true;\n        this.computerDisplay();\n    }\n    statue() {\n        const proto = this.properties;\n        const source = proto[proto.variant];\n        this.ctx.clearRect(this.x + 4, this.y - 4, source.w, source.h);\n        if (this.state) return;\n        this.ctx.drawImage((0, $1abd0cf01f2b19a8$export$49dc942d7cd17996), source.x, source.y, source.w, source.h, this.x + 4, this.y - 4, source.w, source.h // destination height\n        );\n    }\n    safe() {\n        if (this.combinationFailed) return;\n        if (!this.combination) {\n            this.combination = [\n                ...new Array(Math.round(Math.random() * 4 + 5))\n            ].map((_)=>Math.round(Math.random() * 5) + 1);\n            this.combination[1] = Math.max(2, this.combination[1]);\n        }\n        if (this.combinationStep === 0) {\n            this.combinationStep += 1;\n            return;\n        }\n        const direction = [\n            \"left\",\n            \"right\"\n        ][this.combinationStep % 2];\n        const ply = (0, $d7af1a68c6d62be5$export$2616165974278734).getCurrent();\n        if (ply.movement === \"up\" && this.combinationSuccess && this.combinationStep !== 1) {\n            this.setState(true);\n            this.draw();\n            return;\n        }\n        if (this.combinationSuccess && this.state) return;\n        if (direction === ply.movement) {\n            this.combinationTicks += 1;\n            $9966339ff104769c$var$displayCombination(this.combination, this.combinationStep, this);\n        } else {\n            this.combinationFailed = true;\n            this.combinationSuccess = false;\n            $9966339ff104769c$var$displayCombination(this.combination, this.combinationStep, this);\n            (0, $a55e885f30d13062$export$68baa0dba130a7c0)((0, $a55e885f30d13062$export$def29a33f8fb4446)([\n                \"E4\",\n                \"\",\n                \"A3\"\n            ], [\n                60,\n                200,\n                250\n            ]), 0.4);\n            return;\n        }\n        if (this.combination[this.combinationStep] - this.combinationTicks === 0) {\n            this.combinationStep += 1;\n            this.combinationTicks = 0;\n            $9966339ff104769c$var$displayCombination(this.combination, this.combinationStep, this);\n            if (this.combination[this.combinationStep]) (0, $a55e885f30d13062$export$68baa0dba130a7c0)((0, $a55e885f30d13062$export$def29a33f8fb4446)([\n                \"A3\"\n            ], [\n                60\n            ]), 0.4);\n        } else (0, $a55e885f30d13062$export$68baa0dba130a7c0)((0, $a55e885f30d13062$export$def29a33f8fb4446)([\n            \"A2\"\n        ], [\n            60\n        ]), 0.4);\n        if (!this.combination[this.combinationStep]) {\n            this.combinationSuccess = true;\n            $9966339ff104769c$var$displayCombination(this.combination, this.combinationStep, this);\n            (0, $a55e885f30d13062$export$68baa0dba130a7c0)((0, $a55e885f30d13062$export$def29a33f8fb4446)([\n                \"G5\",\n                \" \",\n                \"A5\"\n            ], [\n                50,\n                50,\n                50\n            ]), 0.4);\n        }\n    }\n    computerDisplay() {\n        $9966339ff104769c$var$ctxVfx.clearRect(this.x + 8, this.y + 4, 16, 8);\n        $9966339ff104769c$var$ctxVfx.beginPath();\n        if (this.combinationStep === 0) $9966339ff104769c$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[3];\n        else if (this.combinationFailed) $9966339ff104769c$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[4];\n        else if (this.combinationSuccess) $9966339ff104769c$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[5];\n        else $9966339ff104769c$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[3];\n        $9966339ff104769c$var$ctxVfx.rect(this.x + 8, this.y + 4, 16, 8);\n        $9966339ff104769c$var$ctxVfx.fill();\n        $9966339ff104769c$var$ctxVfx.closePath();\n        if (this.combinationStep === 0) return;\n        if (this.combinationFailed || this.combinationSuccess) return;\n        $9966339ff104769c$var$ctxVfx.beginPath();\n        $9966339ff104769c$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[5];\n        const displayDirection = {\n            up: [\n                this.x + 12,\n                this.y + 4,\n                8,\n                4\n            ],\n            left: [\n                this.x + 8,\n                this.y + 4,\n                4,\n                8\n            ],\n            right: [\n                this.x + 20,\n                this.y + 4,\n                4,\n                8\n            ]\n        }[this.combination[this.combinationStep]];\n        $9966339ff104769c$var$ctxVfx.rect(...displayDirection);\n        $9966339ff104769c$var$ctxVfx.fill();\n        $9966339ff104769c$var$ctxVfx.closePath();\n    }\n}\nconst $9966339ff104769c$var$displayCombination = (combination, combinationStep, obj)=>{\n    let text = new Array(combination.length - 1).fill(\"\");\n    text = text.map((_itm, key)=>{\n        if (key === combinationStep - 1) return \"[*]\";\n        if (key >= combinationStep - 1) // maybe dificulty ?\n        // const direction = ['>', '<'][key % 2]\n        // return `[${direction}]`\n        // return '[*]'\n        return \"\";\n        return `[${combination[key + 1]}]`;\n    }).filter((itm)=>itm !== \"\").join(\"\");\n    $9966339ff104769c$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[1];\n    if (obj.combinationSuccess) {\n        $9966339ff104769c$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[1];\n        text = \"Safe unlocked\";\n    }\n    if (obj.combinationFailed) $9966339ff104769c$var$ctxVfx.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[4];\n    (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).displayText(text, obj);\n};\n\n\n\nconst $7f0b9e09ad51e41d$var$ctxVfx = document.getElementById(\"vfx\").getContext(\"2d\");\nclass $7f0b9e09ad51e41d$export$d48d70e042b99166 {\n    constructor(item){\n        this.props = item;\n        this.position = {\n            x: item.x,\n            y: item.y\n        };\n        this.canMove = true;\n        this.width = this.props.width;\n        this.clearText = ()=>$7f0b9e09ad51e41d$export$d48d70e042b99166.clearText(this);\n        if (!$7f0b9e09ad51e41d$export$d48d70e042b99166.instances) $7f0b9e09ad51e41d$export$d48d70e042b99166.instances = [];\n        $7f0b9e09ad51e41d$export$d48d70e042b99166.instances.push(this);\n    }\n    static ctx = document.getElementById(\"vigilance\").getContext(\"2d\");\n    static ctxSight = document.getElementById(\"light\").getContext(\"2d\");\n    static clearText(obj) {\n        if (obj.textBound) {\n            const bounds = obj.textBound;\n            $7f0b9e09ad51e41d$var$ctxVfx.clearRect(bounds.x - 1, bounds.y - 1, bounds.w + 2, bounds.h + 2);\n        }\n    }\n    static getCamera(id) {\n        return $7f0b9e09ad51e41d$export$d48d70e042b99166.instances.find((itm)=>itm.id === id);\n    }\n    static getActiveVigilance() {\n        return $7f0b9e09ad51e41d$export$d48d70e042b99166.instances.filter((vg)=>vg.props.start).filter((vg)=>{\n            if (vg.props.type === \"camera\" && (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).hasEnergy) return true;\n            if (vg.props.type !== \"camera\") return true;\n            return false;\n        });\n    }\n    static getAll() {\n        return $7f0b9e09ad51e41d$export$d48d70e042b99166.instances;\n    }\n    static createAll(instances) {\n        $7f0b9e09ad51e41d$export$d48d70e042b99166.chain = JSON.parse(JSON.stringify(instances)).map((itm, _index, self)=>{\n            const pointer = itm.properties.find((prop)=>prop.name === \"next\");\n            if (!pointer) return itm;\n            itm.next = pointer.value;\n            delete itm.properties;\n            delete itm.name;\n            delete itm.rotation;\n            delete itm.type;\n            delete itm.visible;\n            const next = self.find((stop)=>stop.id === pointer.value);\n            let direction = \"up\";\n            if (itm.x < next.x) direction = \"right\";\n            if (itm.x > next.x) direction = \"left\";\n            if (itm.y < next.y) direction = \"down\";\n            itm.direction = direction;\n            return itm;\n        });\n        instances.map((itm)=>{\n            const start = itm.properties.find((prop)=>prop.name === \"start\");\n            if (start) itm.start = start.value;\n            else itm.start = false;\n            if (itm.type === \"camera\") itm.start = true;\n            return itm;\n        }).filter((obj)=>{\n            if (obj.type === \"guard\" && !obj.start) return false;\n            return true;\n        }).map((itm)=>{\n            (0, $9966339ff104769c$export$6738a6d9146a0cdc).prototypes.find((obj)=>obj.name === itm.type).properties.forEach(({ name: name, value: value })=>{\n                itm[name] = JSON.parse(value);\n            });\n            return itm;\n        }).forEach((instance)=>{\n            if (instance.type === \"camera\") {\n                const direction = instance.properties.find((itm)=>itm.name === \"direction\").value;\n                instance.direction = direction;\n                instance.start = true;\n                delete instance.properties;\n                instance.Object = (0, $9966339ff104769c$export$6738a6d9146a0cdc).addObject(instance);\n            }\n            return new $7f0b9e09ad51e41d$export$d48d70e042b99166(instance);\n        });\n    }\n    static calculateDistance(x1, y1, x2, y2) {\n        return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    static getInteractingWith({ bound: bound }) {\n        const { x: px, y: py } = bound;\n        let closest = null;\n        let minDistance = Infinity;\n        $7f0b9e09ad51e41d$export$d48d70e042b99166.instances.filter((vg)=>vg.props.type === \"guard\").forEach((vg)=>{\n            const { x: vx, y: vy } = vg.col;\n            const distance = $7f0b9e09ad51e41d$export$d48d70e042b99166.calculateDistance(px, py, vx, vy);\n            if (distance < minDistance) {\n                minDistance = distance;\n                closest = vg;\n            }\n        });\n        return closest;\n    }\n    captureRadius({ x: x, y: y, w: w, h: h }) {\n        const filas = 32;\n        const columnas = 32;\n        const sombra = Array(filas * columnas).fill(0);\n        // Calcular las coordenadas de la matriz que cubre el elemento\n        const inicioFila = Math.max(0, Math.floor(y / 16));\n        const finFila = Math.min(filas, Math.ceil((y + h) / 16));\n        const inicioColumna = Math.max(0, Math.floor(x / 16));\n        const finColumna = Math.min(columnas, Math.ceil((x + w) / 16));\n        // Marcar las celdas correspondientes con 1\n        for(let i = inicioFila; i < finFila; i++)for(let j = inicioColumna; j < finColumna; j++){\n            const indice = i * columnas + j;\n            sombra[indice] = 1;\n        }\n        (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).setTriggers({\n            type: \"halt\",\n            value: sombra\n        });\n        if (0, $d40f0d5cf5f894a3$export$b72fc7cdd53dd289) {\n            $7f0b9e09ad51e41d$export$d48d70e042b99166.ctxSight.beginPath();\n            sombra.forEach((val, index)=>{\n                if (val === 0) return;\n                $7f0b9e09ad51e41d$export$d48d70e042b99166.ctxSight.rect(index % 32 * 16, Math.floor(index / 32) * 16, 16, 16);\n            });\n            $7f0b9e09ad51e41d$export$d48d70e042b99166.ctxSight.fillStyle = `${(0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[11]}66`;\n            $7f0b9e09ad51e41d$export$d48d70e042b99166.ctxSight.fill();\n            $7f0b9e09ad51e41d$export$d48d70e042b99166.ctxSight.closePath();\n        }\n    }\n    frame() {\n        this.x = this.position.x;\n        this.y = this.position.y;\n        if (!this.canMove) return this.draw();\n        if (!this.id) this.id = this.props.id;\n        const pointer = $7f0b9e09ad51e41d$export$d48d70e042b99166.chain.find((prop)=>prop.id === this.id);\n        const next = $7f0b9e09ad51e41d$export$d48d70e042b99166.chain.find((stop)=>stop.id === pointer.next) || {};\n        this.direction = pointer.direction;\n        if (this.direction === \"right\") Object.assign(this.position, {\n            x: this.position.x + 16\n        });\n        if (this.direction === \"left\") Object.assign(this.position, {\n            x: this.position.x - 16\n        });\n        if (this.direction === \"down\") Object.assign(this.position, {\n            y: this.position.y + 16\n        });\n        if (this.direction === \"up\") Object.assign(this.position, {\n            y: this.position.y - 16\n        });\n        this.col = {\n            x: this.position.x - 16,\n            y: this.position.y,\n            w: 64,\n            h: 64\n        };\n        if (this.props.type === \"camera\") this.direction = this.props.direction;\n        if (next.x === this.position.x && next.y === this.position.y) this.id = next.id;\n        this.step = !this.step;\n        this.draw();\n    }\n    draw() {\n        if (this.props.type === \"camera\") return; // cameras are drawed in the game loop\n        const normAlt = {\n            true: \"Alt\",\n            false: \"\"\n        }[!this.step];\n        const sprite = `${this.direction}${normAlt}`;\n        const ctx = $7f0b9e09ad51e41d$export$d48d70e042b99166.ctx;\n        ctx.beginPath();\n        ctx.drawImage((0, $1abd0cf01f2b19a8$export$49dc942d7cd17996), this.props[sprite].x, this.props[sprite].y, this.props.width, this.props.height, this.position.x, this.position.y, this.props.width, this.props.height);\n        ctx.closePath();\n        this.captureRadius(this.col);\n        return sprite;\n    }\n}\n\n\n\n\n\nconst $d40f0d5cf5f894a3$var$ctxSight = document.getElementById(\"sight\").getContext(\"2d\");\nconst $d40f0d5cf5f894a3$var$ctxVfx = document.getElementById(\"vfx\").getContext(\"2d\");\nconst $d40f0d5cf5f894a3$var$ctxBg = document.getElementById(\"background\").getContext(\"2d\");\nconst [$d40f0d5cf5f894a3$export$b72fc7cdd53dd289, $d40f0d5cf5f894a3$export$7f5ef1932fe772bc, $d40f0d5cf5f894a3$export$a751a154160b8881] = [\n    false,\n    false,\n    false\n];\nconst $d40f0d5cf5f894a3$export$119d2a93e2780362 = {\n    reset () {\n        this.objects = {};\n        this.insideMap = [];\n        this.collitionMap = [];\n        this.alertTrigger = [];\n        this.haltTrigger = [];\n        this.timer = null;\n        this.stepValue = 0;\n        this.hasEnergy = true;\n        this.found = false;\n        this.police = false;\n        this.gameOver = false;\n        (0, $d7af1a68c6d62be5$export$2616165974278734).instances = [];\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).instances = [];\n        (0, $9966339ff104769c$export$6738a6d9146a0cdc).instances = [];\n    },\n    Player: $d7af1a68c6d62be5$export$2616165974278734,\n    Vigilance: $7f0b9e09ad51e41d$export$d48d70e042b99166,\n    Obj: $9966339ff104769c$export$6738a6d9146a0cdc,\n    ticker () {\n        if (this.stepValue === 10) this.stepValue = 0;\n        this.stepValue += 1;\n        if (!$d40f0d5cf5f894a3$export$a751a154160b8881) {\n            const stepSound = [\n                \"F2\",\n                \"C2\"\n            ][this.stepValue % 2];\n            (0, $a55e885f30d13062$export$68baa0dba130a7c0)((0, $a55e885f30d13062$export$def29a33f8fb4446)([\n                stepSound\n            ], [\n                400\n            ]));\n        }\n        if (this.timer) clearInterval(this.timer);\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).ctx.clearRect(0, 0, 512, 512);\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).ctxSight.clearRect(0, 0, 512, 512);\n        this.alertTrigger = new Array(1024).fill(0);\n        this.haltTrigger = new Array(1024).fill(0);\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).getActiveVigilance().forEach((vg)=>{\n            vg.frame();\n            this.generateSight(vg);\n        });\n        (0, $d7af1a68c6d62be5$export$2616165974278734).instances.forEach((pl)=>{\n            const { x: x, y: y } = pl.position;\n            const computed = $d40f0d5cf5f894a3$export$119d2a93e2780362.computePosition(x, y + 16);\n            this.testTrigger(computed.collitionIndex, pl);\n        });\n        (0, $9966339ff104769c$export$6738a6d9146a0cdc).instances.filter((obj)=>obj.state === true).forEach((obj)=>{\n            let det = {\n                x: 0,\n                y: 0,\n                w: obj.width,\n                h: obj.height\n            };\n            if (obj.properties.detection) det = obj.properties.detection;\n            const computed = this.multipleComputePosition(obj.x + det.x, obj.y + det.y, det.w, det.h);\n            if ($d40f0d5cf5f894a3$export$b72fc7cdd53dd289) {\n                $d40f0d5cf5f894a3$var$ctxVfx.beginPath();\n                $d40f0d5cf5f894a3$var$ctxVfx.strokeStyle = this.palette[4];\n                $d40f0d5cf5f894a3$var$ctxVfx.rect(obj.x + det.x, obj.y + det.y, det.w, det.h);\n                $d40f0d5cf5f894a3$var$ctxVfx.stroke();\n                $d40f0d5cf5f894a3$var$ctxVfx.closePath();\n            }\n            computed.forEach(({ collitionIndex: collitionIndex })=>{\n                this.testTrigger(collitionIndex, obj);\n            });\n        });\n        const delay = this.found ? 400 : 800;\n        const now = new Date().getTime();\n        if (this.found && now - this.found > 5000 && !this.police) {\n            (0, $a55e885f30d13062$export$7eac8da43dbf25b2)(this);\n            this.police = true;\n        }\n        if (this.found && now - this.found > 15000 && !this.gameOver) {\n            this.gameOver = true;\n            (0, $91ca95b993497c18$export$611b5196d80f8d0e)(this.user);\n            return clearInterval(this.timer);\n        }\n        if (this.police) {\n            $d40f0d5cf5f894a3$var$ctxBg.beginPath();\n            const color = [\n                $d40f0d5cf5f894a3$export$119d2a93e2780362.palette[4],\n                $d40f0d5cf5f894a3$export$119d2a93e2780362.palette[3]\n            ][this.stepValue % 2];\n            $d40f0d5cf5f894a3$var$ctxBg.fillStyle = color;\n            $d40f0d5cf5f894a3$var$ctxBg.rect(0, 0, 512, 512);\n            $d40f0d5cf5f894a3$var$ctxBg.fill();\n            $d40f0d5cf5f894a3$var$ctxBg.closePath();\n        }\n        this.timer = setInterval(()=>{\n            this.ticker();\n        }, delay);\n    },\n    triggerSight () {\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).ctxSight.clearRect(0, 0, 512, 512);\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).getActiveVigilance().forEach((vg)=>{\n            this.generateSight(vg);\n        });\n    },\n    multipleComputePosition (x, y, w, h) {\n        const computed = new Set();\n        for(let xd = x; xd < x + w; xd += 16)for(let yd = y; yd < y + h; yd += 16)computed.add(this.computePosition(xd, yd));\n        return [\n            ...computed\n        ];\n    },\n    computePosition (x, y) {\n        const computed = {\n            x: Math.floor(x / 16) + 2,\n            y: Math.ceil(y / 16) + 2\n        };\n        computed.collitionIndex = computed.x - 1 + (computed.y - 1) * 32;\n        return computed;\n    },\n    toggleVisibility (obj) {\n        const { collitionIndex: collitionIndex } = this.computePosition(obj.x - 16, obj.y - 16);\n        this.obstaclesMap[collitionIndex] = obj.state ? 0 : -1;\n        this.setSight();\n    },\n    generateShadow (collitionIndex, pl) {\n        const shadow = new Array(1024).fill(0);\n        const playerX = Math.floor(collitionIndex % 32);\n        const playerY = Math.floor(collitionIndex / 32);\n        for(let y = 0; y < 32; y++)for(let x = 0; x < 32; x++){\n            // Calculate angle and distance from player to ever other item in obstaclesMap\n            const dx = x - playerX;\n            const dy = y - playerY;\n            const angle = Math.atan2(dy, dx);\n            const distance = Math.sqrt(dx ** 2 + dy ** 2);\n            // Verificar si hay obstrucciones en la línea de vista\n            let visibleObstacle = false;\n            for(let d = 1; d <= distance; d++){\n                const xObstruction = Math.round(playerX + d * Math.cos(angle));\n                const yObstruction = Math.round(playerY + d * Math.sin(angle));\n                const obstructionPosition = yObstruction * 32 + xObstruction;\n                if (xObstruction >= 0 && xObstruction < 32 && yObstruction >= 0 && yObstruction < 32) {\n                    if (this.obstaclesMap[obstructionPosition] !== 0) {\n                        if (!visibleObstacle) {\n                            shadow[obstructionPosition] = 1;\n                            visibleObstacle = true;\n                        }\n                        break;\n                    } else shadow[obstructionPosition] = 1;\n                }\n            }\n        }\n        $d40f0d5cf5f894a3$var$ctxSight.clearRect(pl.x + 8, pl.y + 16, 16, 16);\n        shadow.forEach((val, index)=>{\n            if (val === 0) return;\n            $d40f0d5cf5f894a3$var$ctxSight.clearRect(index % 32 * 16, Math.floor(index / 32) * 16, 16, 16);\n        });\n        $d40f0d5cf5f894a3$var$ctxSight.closePath();\n    },\n    generateSight (vg) {\n        if (vg.props.Object?.state) return;\n        const mapa = this.collitionMap;\n        const filas = 32;\n        const columnas = 32;\n        const tamanoMapa = filas * columnas;\n        const sombra = new Array(tamanoMapa).fill(0);\n        let [x, y] = [\n            vg.position.x,\n            vg.position.y\n        ];\n        const apertura = 30;\n        let rangoAngulos;\n        if (vg.props.type === \"guard\" && [\n            \"down\",\n            \"left\",\n            \"up\"\n        ].includes(vg.direction)) x -= 1;\n        if (vg.direction === \"right\") rangoAngulos = [\n            360 - apertura,\n            apertura\n        ];\n        if (vg.direction === \"down\") rangoAngulos = [\n            90 - apertura,\n            90 + apertura\n        ];\n        if (vg.direction === \"left\") rangoAngulos = [\n            180 - apertura,\n            180 + apertura\n        ];\n        if (vg.direction === \"up\") rangoAngulos = [\n            270 - apertura,\n            270 + apertura\n        ];\n        if (vg.props.type === \"camera\") {\n            if ([\n                \"right\",\n                \"left\"\n            ].includes(vg.direction)) x -= 1;\n            if (vg.direction === \"right\") rangoAngulos = [\n                0,\n                45\n            ];\n            if (vg.direction === \"left\") rangoAngulos = [\n                135,\n                180\n            ];\n        }\n        const posicionUnidad = this.computePosition(x, y).collitionIndex;\n        const xUnidad = Math.floor(posicionUnidad % columnas);\n        const yUnidad = Math.floor(posicionUnidad / columnas);\n        for(let y = 0; y < filas; y++)for(let x = 0; x < columnas; x++){\n            // Calcular ángulo y distancia desde la unidad hasta la posición actual\n            const dx = x - xUnidad;\n            const dy = y - yUnidad;\n            const angulo = Math.atan2(dy, dx);\n            // Convertir el ángulo a grados\n            const anguloGrados = angulo * 180 / Math.PI;\n            // Mapear el ángulo al rango [0, 360)\n            const anguloMapeado = (anguloGrados + 360) % 360;\n            // Verificar si el ángulo está dentro del rango especificado\n            let anguloEnRango = false;\n            if (rangoAngulos[0] <= rangoAngulos[1]) anguloEnRango = rangoAngulos[0] <= anguloMapeado && anguloMapeado <= rangoAngulos[1];\n            else anguloEnRango = anguloMapeado >= rangoAngulos[0] || anguloMapeado <= rangoAngulos[1];\n            if (anguloEnRango) {\n                const distancia = Math.sqrt(dx ** 2 + dy ** 2);\n                // Verificar si hay obstrucciones en la línea de vista\n                let visibleObstacle = false;\n                for(let d = 1; d <= distancia; d++){\n                    const xObstruccion = Math.round(xUnidad + d * Math.cos(angulo));\n                    const yObstruccion = Math.round(yUnidad + d * Math.sin(angulo));\n                    const posicionObstruccion = yObstruccion * columnas + xObstruccion;\n                    if (xObstruccion >= 0 && xObstruccion < columnas && yObstruccion >= 0 && yObstruccion < filas) {\n                        if (mapa[posicionObstruccion] !== 0) {\n                            if (!visibleObstacle) {\n                                sombra[posicionObstruccion] = 1;\n                                visibleObstacle = true;\n                            }\n                            break;\n                        } else sombra[posicionObstruccion] = 1;\n                    }\n                }\n            }\n        }\n        $d40f0d5cf5f894a3$export$119d2a93e2780362.setTriggers({\n            type: \"light\",\n            value: sombra\n        });\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).ctxSight.beginPath();\n        sombra.forEach((val, index)=>{\n            if (val === 0) return;\n            (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).ctxSight.rect(index % 32 * 16, Math.floor(index / 32) * 16, 16, 16);\n        });\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).ctxSight.fillStyle = `${this.palette[11]}66`;\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).ctxSight.fill();\n        (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).ctxSight.closePath();\n    },\n    setTriggers ({ type: type, value: value }) {\n        if (type === \"light\") value.forEach((value, key)=>{\n            if (value) this.alertTrigger[key] = value;\n        });\n        if (type === \"halt\") value.forEach((value, key)=>{\n            if (value) this.haltTrigger[key] = value;\n        });\n    },\n    testTrigger (collitionIndex, actioner) {\n        if (this.alertTrigger[collitionIndex] && !this.found) {\n            this.found = new Date().getTime();\n            (0, $a55e885f30d13062$export$270967f0cf9c45d3)();\n            $d40f0d5cf5f894a3$var$ctxVfx.fillStyle = this.palette[1];\n            this.displayText(actioner.properties.foundMessage, actioner);\n            setTimeout(()=>{\n                actioner.clearText();\n            }, 3000);\n        }\n    },\n    testHalt (collitionIndex) {\n        if (this.haltTrigger[collitionIndex]) {\n            const player = (0, $d7af1a68c6d62be5$export$2616165974278734).getCurrent();\n            player.freezed = true;\n            const guard = (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).getInteractingWith((0, $d7af1a68c6d62be5$export$2616165974278734).getCurrent());\n            guard.canMove = false;\n            const { x: px, y: py } = player.bound;\n            const { x: vx, y: vy } = guard.col;\n            const deltaX = vx - px;\n            const deltaY = vy - py;\n            if (Math.abs(deltaX) > Math.abs(deltaY)) guard.direction = deltaX > 0 ? \"left\" : \"right\";\n            else guard.direction = deltaY > 0 ? \"up\" : \"down\";\n            if (!this.found) {\n                this.found = new Date().getTime();\n                (0, $a55e885f30d13062$export$270967f0cf9c45d3)();\n            }\n            $d40f0d5cf5f894a3$var$ctxVfx.fillStyle = this.palette[1];\n            this.displayText(\"Intruder caught!\", guard);\n            setTimeout(()=>{\n                guard.clearText();\n            }, 3000);\n        }\n    },\n    setSight () {\n        if ($d40f0d5cf5f894a3$export$7f5ef1932fe772bc) return;\n        const players = (0, $d7af1a68c6d62be5$export$2616165974278734).instances.map(({ position: position })=>position);\n        $d40f0d5cf5f894a3$var$ctxSight.beginPath();\n        $d40f0d5cf5f894a3$var$ctxSight.fillStyle = this.palette[0];\n        $d40f0d5cf5f894a3$var$ctxSight.rect(0, 0, 512, 512);\n        $d40f0d5cf5f894a3$var$ctxSight.fill();\n        $d40f0d5cf5f894a3$var$ctxSight.closePath();\n        players.forEach((pl)=>{\n            this.generateShadow(this.computePosition(pl.x, pl.y).collitionIndex, pl);\n        });\n    },\n    displayText (text, obj) {\n        obj.clearText();\n        $d40f0d5cf5f894a3$var$ctxVfx.font = '10px \"Press Start 2P\"';\n        $d40f0d5cf5f894a3$var$ctxVfx.textAlign = \"center\";\n        $d40f0d5cf5f894a3$var$ctxVfx.fillText(text, obj.x + obj.width / 2, obj.y);\n        const textSize = $d40f0d5cf5f894a3$var$ctxVfx.measureText(text);\n        const height = Math.ceil(textSize.actualBoundingBoxAscent + textSize.actualBoundingBoxDescent) + 2;\n        obj.textBound = {\n            y: obj.y - height,\n            w: textSize.width,\n            h: height,\n            x: obj.x + obj.width / 2 - textSize.width / 2\n        };\n    }\n};\n\n\n\n\n\n\n\nconst $1abd0cf01f2b19a8$var$ctxFloor = document.getElementById(\"floor\").getContext(\"2d\");\nconst $1abd0cf01f2b19a8$var$ctxWalls = document.getElementById(\"walls\").getContext(\"2d\");\nconst $1abd0cf01f2b19a8$var$ctxPlayer1 = document.getElementById(\"player1\").getContext(\"2d\");\nconst $1abd0cf01f2b19a8$var$ctxPlayer2 = document.getElementById(\"player2\").getContext(\"2d\");\nconst $1abd0cf01f2b19a8$var$ctxOver = document.getElementById(\"overlayer\").getContext(\"2d\");\nconst $1abd0cf01f2b19a8$export$49dc942d7cd17996 = new Image();\nlet $1abd0cf01f2b19a8$var$throttler = -Infinity;\nconst $1abd0cf01f2b19a8$var$eventsTrigger = (keyCode)=>{\n    const now = new Date().getTime();\n    if (now - $1abd0cf01f2b19a8$var$throttler < 60) return;\n    $1abd0cf01f2b19a8$var$throttler = new Date().getTime();\n    $1abd0cf01f2b19a8$var$playerActions(keyCode);\n};\nconst $1abd0cf01f2b19a8$var$playerActions = (keyCode)=>{\n    if ((0, $d40f0d5cf5f894a3$export$119d2a93e2780362).gameOver) return;\n    const player = (0, $d7af1a68c6d62be5$export$2616165974278734).getCurrent();\n    switch(keyCode){\n        case (0, $741e5dc94144fd09$export$95400d94d43a5402).aKey:\n            (0, $d7af1a68c6d62be5$export$2616165974278734).instances.forEach((player)=>player.toggleActivation());\n            break;\n        default:\n            if (player.frezed) return;\n            switch(keyCode){\n                case (0, $741e5dc94144fd09$export$95400d94d43a5402).leftKey:\n                    player.position.flip = true;\n                    player.move({\n                        x: player.position.x - 16\n                    });\n                    break;\n                case (0, $741e5dc94144fd09$export$95400d94d43a5402).rightKey:\n                    player.position.flip = false;\n                    player.move({\n                        x: player.position.x + 16\n                    });\n                    break;\n                case (0, $741e5dc94144fd09$export$95400d94d43a5402).upKey:\n                    player.move({\n                        y: player.position.y - 16\n                    });\n                    break;\n                case (0, $741e5dc94144fd09$export$95400d94d43a5402).downKey:\n                    player.move({\n                        y: player.position.y + 16\n                    });\n                    break;\n                case (0, $741e5dc94144fd09$export$95400d94d43a5402).bKey:\n                    (0, $d7af1a68c6d62be5$export$2616165974278734).getCurrent().return();\n                    (0, $d7af1a68c6d62be5$export$2616165974278734).getCurrent().draw();\n            }\n            break;\n    }\n};\nconst $1abd0cf01f2b19a8$var$loadMetadata = (map, name, section = \"data\")=>{\n    const layer = map.layers.find((layer)=>layer.name === name);\n    if (layer) return layer[section];\n    return [];\n};\nconst $1abd0cf01f2b19a8$var$setPalette = (tileset)=>{\n    const rgbToHex = (r, g, b)=>{\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    };\n    const componentToHex = (c)=>{\n        const hex = c.toString(16);\n        return hex.length === 1 ? \"0\" + hex : hex;\n    };\n    const tcanv = document.createElement(\"canvas\");\n    tcanv.width = tileset.width;\n    tcanv.height = tileset.height;\n    const tCtx = tcanv.getContext(\"2d\", {\n        willReadFrequently: true\n    });\n    tCtx.drawImage(tileset, 0, 0, tileset.width, tileset.height);\n    (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette = [];\n    for(let y = 4; y <= 20; y += 16)for(let x = 4; x <= 116; x += 16){\n        const pixelData = tCtx.getImageData(x, y, 1, 1).data;\n        const hex = rgbToHex(pixelData[0], pixelData[1], pixelData[2]);\n        (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette.push(hex);\n    }\n};\nconst $1abd0cf01f2b19a8$export$29901fa26cd744fa = (level, user)=>{\n    user.changeTrigger($1abd0cf01f2b19a8$var$eventsTrigger);\n    (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).user = user;\n    (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).reset();\n    (0, $d7af1a68c6d62be5$export$2616165974278734).create($1abd0cf01f2b19a8$var$ctxPlayer1, 440, 384, true);\n    // Player.create(ctxPlayer1, -8, 0, true)\n    (0, $d7af1a68c6d62be5$export$2616165974278734).create($1abd0cf01f2b19a8$var$ctxPlayer2, -8, 32);\n    fetch(`${level}/map.json`).then((response)=>{\n        console.log(response);\n        return response.json();\n    }).then((map)=>{\n        const tileSource = map.properties.find((itm)=>itm.name === \"tileset\");\n        $1abd0cf01f2b19a8$export$49dc942d7cd17996.onload = function() {\n            $1abd0cf01f2b19a8$var$setPalette($1abd0cf01f2b19a8$export$49dc942d7cd17996);\n            (0, $a97524d8df662a03$export$aad8462122ac592b)();\n            (0, $9966339ff104769c$export$6738a6d9146a0cdc).setPrototypes($1abd0cf01f2b19a8$var$loadMetadata(map, \"objects\", \"objects\"));\n            (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).insideMap = $1abd0cf01f2b19a8$var$loadMetadata(map, \"floor\");\n            (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).collitionMap = $1abd0cf01f2b19a8$var$loadMetadata(map, \"collitions\");\n            (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).obstaclesMap = $1abd0cf01f2b19a8$var$loadMetadata(map, \"obstacles\");\n            (0, $9966339ff104769c$export$6738a6d9146a0cdc).setObjects($1abd0cf01f2b19a8$var$loadMetadata(map, \"objects\", \"objects\"));\n            (0, $7f0b9e09ad51e41d$export$d48d70e042b99166).createAll($1abd0cf01f2b19a8$var$loadMetadata(map, \"vigilance\", \"objects\"));\n            (0, $d7af1a68c6d62be5$export$2616165974278734).instances.forEach((player)=>player.draw());\n            map.layers.filter((layer)=>layer.visible && layer.type === \"tilelayer\").forEach((itm)=>{\n                let ctx = $1abd0cf01f2b19a8$var$ctxFloor;\n                if (itm.name === \"overlayer\") ctx = $1abd0cf01f2b19a8$var$ctxOver;\n                if (itm.name === \"walls\") ctx = $1abd0cf01f2b19a8$var$ctxWalls;\n                const data = itm.data;\n                data.forEach((tile, index)=>{\n                    if (tile === 0) return;\n                    ctx.drawImage($1abd0cf01f2b19a8$export$49dc942d7cd17996, (tile - 1) % 8 * 16, Math.floor((tile - 1) / 8) * 16, 16, 16, index % 32 * 16, Math.floor(index / 32) * 16, 16, 16 // destination height\n                    );\n                });\n            });\n            (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).ticker() // inicia animaciones\n            ;\n        };\n        $1abd0cf01f2b19a8$export$49dc942d7cd17996.src = `${level}/${tileSource.value}`;\n    });\n};\n\n\n\nclass $a97524d8df662a03$var$Brain {\n    constructor(){\n        const gameData = JSON.parse(localStorage.sneaky || \"{}\");\n        Object.entries(gameData).forEach(([k, v])=>{\n            this[k] = v;\n        });\n        if (!this.balance) this.balance = 0;\n        this.balance = ~~this.balance;\n    }\n    save() {\n        localStorage.sneaky = JSON.stringify(this);\n    }\n    set(key, value) {\n        this[key] = value;\n        this.save();\n    }\n    push(key, value) {\n        this[key].push(value);\n        this.save();\n    }\n    get(key) {\n        return this[key];\n    }\n}\nconst $a97524d8df662a03$var$user = new (0, $741e5dc94144fd09$export$1f44aaf2ec115b54)();\nconst $a97524d8df662a03$export$aad8462122ac592b = (_)=>{\n    (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).brain = new $a97524d8df662a03$var$Brain();\n    (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).brain.set(\"loot\", []);\n    const ctxBg = document.getElementById(\"background\").getContext(\"2d\");\n    const canvases = document.querySelectorAll(\"canvas\");\n    canvases.forEach((canv)=>{\n        const ctx = canv.getContext(\"2d\");\n        ctx.clearRect(0, 0, 512, 512);\n    });\n    ctxBg.beginPath();\n    ctxBg.rect(0, 0, 512, 512);\n    ctxBg.fillStyle = (0, $d40f0d5cf5f894a3$export$119d2a93e2780362).palette[0];\n    ctxBg.fill();\n    ctxBg.closePath();\n};\n(0, $1abd0cf01f2b19a8$export$29901fa26cd744fa)(\"./levels/0001\", $a97524d8df662a03$var$user);\n\n\n//# sourceMappingURL=index.f72c8388.js.map\n","import { User } from './user'\nimport { gameLevel } from './scenes/game'\nimport { game } from './scenes/game/game'\n\nclass Brain {\n  constructor () {\n    const gameData = JSON.parse(localStorage.sneaky || '{}')\n    Object.entries(gameData).forEach(([k, v]) => { this[k] = v })\n    if (!this.balance) this.balance = 0\n    this.balance = ~~this.balance\n  }\n\n  save () {\n    localStorage.sneaky = JSON.stringify(this)\n  }\n\n  set (key, value) {\n    this[key] = value\n    this.save()\n  }\n\n  push (key, value) {\n    this[key].push(value)\n    this.save()\n  }\n\n  get (key) {\n    return this[key]\n  }\n}\n\nconst user = new User()\n\nexport const reset = _ => {\n  game.brain = new Brain()\n  game.brain.set('loot', [])\n  const ctxBg = document.getElementById('background').getContext('2d')\n  const canvases = document.querySelectorAll('canvas')\n  canvases.forEach(canv => {\n    const ctx = canv.getContext('2d')\n    ctx.clearRect(0, 0, 512, 512)\n  })\n  ctxBg.beginPath()\n  ctxBg.rect(0, 0, 512, 512)\n  ctxBg.fillStyle = game.palette[0]\n  ctxBg.fill()\n  ctxBg.closePath()\n}\n\ngameLevel('./levels/0001', user)\n","export const userKeys = {\n  leftKey: 65,\n  upKey: 87,\n  rightKey: 68,\n  downKey: 83,\n  aKey: 'K'.charCodeAt(),\n  bKey: 'J'.charCodeAt()\n}\n\nexport class User {\n  constructor (trigger = () => {}) {\n    this.interval = null\n    this.eventsTrigger = trigger\n    document.addEventListener('keydown', ({ keyCode }) => {\n      this.eventsTrigger(keyCode)\n    })\n    const items = [...document.querySelectorAll('.input')]\n    items.forEach(button => {\n      const eventStart = event => {\n        this.interval = setInterval(() => {\n          const buttonName = event.target.className\n            .split(' ')\n            .filter(name => name !== 'input')[0]\n          this.eventsTrigger(userKeys[`${buttonName}Key`])\n        }, 50)\n      }\n      const eventEnd = _ => {\n        clearInterval(this.interval)\n      }\n      button.addEventListener('touchstart', eventStart)\n      button.addEventListener('touchend', eventEnd)\n      button.addEventListener('mousedown', eventStart)\n      button.addEventListener('mouseup', eventEnd)\n    })\n    document.querySelector('body').addEventListener('touchend', (e) => {\n      e.preventDefault()\n    })\n  }\n\n  changeTrigger (trigger) {\n    this.eventsTrigger = trigger\n  }\n}\n","import { game } from './game'\nimport { Player } from './player'\nimport { Obj } from './objects'\nimport { Vigilance } from './vigilance'\nimport { userKeys } from '../../user'\nimport { reset } from '../../sneaky'\n\nconst ctxFloor = document.getElementById('floor').getContext('2d')\nconst ctxWalls = document.getElementById('walls').getContext('2d')\nconst ctxPlayer1 = document.getElementById('player1').getContext('2d')\nconst ctxPlayer2 = document.getElementById('player2').getContext('2d')\nconst ctxOver = document.getElementById('overlayer').getContext('2d')\n\nexport const tileset = new Image()\n\nlet throttler = -Infinity\n\nconst eventsTrigger = (keyCode) => {\n  const now = new Date().getTime()\n  if (now - throttler < 60) return\n  throttler = new Date().getTime()\n  playerActions(keyCode)\n}\n\nconst playerActions = (keyCode) => {\n  if (game.gameOver) return\n  const player = Player.getCurrent()\n  switch (keyCode) {\n    case userKeys.aKey:\n      Player.instances.forEach(player => player.toggleActivation())\n      break\n    default:\n      if (player.frezed) return\n      switch (keyCode) {\n        case userKeys.leftKey:\n          player.position.flip = true\n          player.move({ x: player.position.x - 16 })\n          break\n        case userKeys.rightKey:\n          player.position.flip = false\n          player.move({ x: player.position.x + 16 })\n          break\n        case userKeys.upKey:\n          player.move({ y: player.position.y - 16 })\n          break\n        case userKeys.downKey:\n          player.move({ y: player.position.y + 16 })\n          break\n        case userKeys.bKey:\n          Player.getCurrent().return()\n          Player.getCurrent().draw()\n      }\n      break\n  }\n}\n\nconst loadMetadata = (map, name, section = 'data') => {\n  const layer = map.layers.find(layer => layer.name === name)\n  if (layer) return layer[section]\n  return []\n}\n\nconst setPalette = tileset => {\n  const rgbToHex = (r, g, b) => {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b)\n  }\n  const componentToHex = c => {\n    const hex = c.toString(16)\n    return hex.length === 1 ? '0' + hex : hex\n  }\n  const tcanv = document.createElement('canvas')\n  tcanv.width = tileset.width\n  tcanv.height = tileset.height\n  const tCtx = tcanv.getContext('2d', { willReadFrequently: true })\n  tCtx.drawImage(tileset, 0, 0, tileset.width, tileset.height)\n\n  game.palette = []\n  for (let y = 4; y <= 20; y += 16) {\n    for (let x = 4; x <= 116; x += 16) {\n      const pixelData = tCtx.getImageData(x, y, 1, 1).data\n      const hex = rgbToHex(pixelData[0], pixelData[1], pixelData[2])\n      game.palette.push(hex)\n    }\n  }\n}\n\nexport const gameLevel = (level, user) => {\n  user.changeTrigger(eventsTrigger)\n  game.user = user\n  game.reset()\n  Player.create(ctxPlayer1, 440, 384, true)\n  // Player.create(ctxPlayer1, -8, 0, true)\n  Player.create(ctxPlayer2, -8, 32)\n  fetch(`${level}/map.json`)\n    .then(response => {\n      console.log(response)\n      return response.json()\n    })\n    .then((map) => {\n      const tileSource = map.properties.find(itm => itm.name === 'tileset')\n      tileset.onload = function () {\n        setPalette(tileset)\n        reset()\n        Obj.setPrototypes(loadMetadata(map, 'objects', 'objects'))\n        game.insideMap = loadMetadata(map, 'floor')\n        game.collitionMap = loadMetadata(map, 'collitions')\n        game.obstaclesMap = loadMetadata(map, 'obstacles')\n        Obj.setObjects(loadMetadata(map, 'objects', 'objects'))\n        Vigilance.createAll(loadMetadata(map, 'vigilance', 'objects'))\n        Player.instances.forEach(player => player.draw())\n        map.layers\n          .filter(layer => layer.visible && layer.type === 'tilelayer')\n          .forEach(itm => {\n            let ctx = ctxFloor\n            if (itm.name === 'overlayer') ctx = ctxOver\n            if (itm.name === 'walls') ctx = ctxWalls\n            const data = itm.data\n            data.forEach((tile, index) => {\n              if (tile === 0) return\n              ctx.drawImage(\n                tileset,\n                ((tile - 1) % 8) * 16, // source x\n                Math.floor((tile - 1) / 8) * 16, // source y\n                16, // source width\n                16, // source height\n                (index % 32) * 16, // desination x\n                Math.floor(index / 32) * 16, // destination y\n                16, // destination width\n                16 // destination height\n              )\n            })\n          })\n        game.ticker() // inicia animaciones\n      }\n      tileset.src = `${level}/${tileSource.value}`\n    })\n}\n","import { playNote, createSoundMap, siren, foundSFX } from '../../sfx'\nimport { Vigilance } from './vigilance'\nimport { Player } from './player'\nimport { Obj } from './objects'\nimport { gameOver } from '../gameOver'\n\nconst ctxSight = document.getElementById('sight').getContext('2d')\nconst ctxVfx = document.getElementById('vfx').getContext('2d')\nconst ctxBg = document.getElementById('background').getContext('2d')\n\nexport const [drawCollitions, noShadows, noSounds] = [false, false, false]\n\nexport const game = {\n  reset () {\n    this.objects = {}\n    this.insideMap = []\n    this.collitionMap = []\n    this.alertTrigger = []\n    this.haltTrigger = []\n    this.timer = null\n    this.stepValue = 0\n    this.hasEnergy = true\n    this.found = false\n    this.police = false\n    this.gameOver = false\n    Player.instances = []\n    Vigilance.instances = []\n    Obj.instances = []\n  },\n  Player,\n  Vigilance,\n  Obj,\n  ticker () {\n    if (this.stepValue === 10) this.stepValue = 0\n    this.stepValue += 1\n    if (!noSounds) {\n      const stepSound = ['F2', 'C2'][this.stepValue % 2]\n      playNote(createSoundMap([stepSound], [400]))\n    }\n    if (this.timer) clearInterval(this.timer)\n    Vigilance.ctx.clearRect(0, 0, 512, 512)\n    Vigilance.ctxSight.clearRect(0, 0, 512, 512)\n    this.alertTrigger = new Array(1024).fill(0)\n    this.haltTrigger = new Array(1024).fill(0)\n    Vigilance.getActiveVigilance()\n      .forEach(vg => {\n        vg.frame()\n        this.generateSight(vg)\n      })\n    Player.instances.forEach(pl => {\n      const { x, y } = pl.position\n      const computed = game.computePosition(x, y + 16)\n      this.testTrigger(computed.collitionIndex, pl)\n    })\n    Obj.instances\n      .filter(obj => obj.state === true)\n      .forEach(obj => {\n        let det = { x: 0, y: 0, w: obj.width, h: obj.height }\n        if (obj.properties.detection) det = obj.properties.detection\n        const computed = this.multipleComputePosition(\n          obj.x + det.x,\n          obj.y + det.y,\n          det.w,\n          det.h\n        )\n        if (drawCollitions) {\n          ctxVfx.beginPath()\n          ctxVfx.strokeStyle = this.palette[4]\n          ctxVfx.rect(\n            obj.x + det.x,\n            obj.y + det.y,\n            det.w,\n            det.h\n          )\n          ctxVfx.stroke()\n          ctxVfx.closePath()\n        }\n        computed.forEach(({ collitionIndex }) => {\n          this.testTrigger(collitionIndex, obj)\n        })\n      })\n    const delay = this.found ? 400 : 800\n    const now = new Date().getTime()\n    if (this.found && now - this.found > 5000 && !this.police) {\n      siren(this)\n      this.police = true\n    }\n    if (this.found && now - this.found > 15000 && !this.gameOver) {\n      this.gameOver = true\n      gameOver(this.user)\n      return clearInterval(this.timer)\n    }\n    if (this.police) {\n      ctxBg.beginPath()\n      const color = [game.palette[4], game.palette[3]][this.stepValue % 2]\n      ctxBg.fillStyle = color\n      ctxBg.rect(0, 0, 512, 512)\n      ctxBg.fill()\n      ctxBg.closePath()\n    }\n    this.timer = setInterval(() => {\n      this.ticker()\n    }, delay)\n  },\n  triggerSight () {\n    Vigilance.ctxSight.clearRect(0, 0, 512, 512)\n    Vigilance.getActiveVigilance().forEach(vg => { this.generateSight(vg) })\n  },\n  multipleComputePosition (x, y, w, h) {\n    const computed = new Set()\n    for (let xd = x; xd < x + w; xd += 16) {\n      for (let yd = y; yd < y + h; yd += 16) {\n        computed.add(this.computePosition(xd, yd))\n      }\n    }\n    return [...computed]\n  },\n  computePosition (x, y) {\n    const computed = { x: Math.floor(x / 16) + 2, y: Math.ceil(y / 16) + 2 }\n    computed.collitionIndex = (computed.x - 1) + (computed.y - 1) * 32\n    return computed\n  },\n  toggleVisibility (obj) {\n    const { collitionIndex } = this.computePosition(obj.x - 16, obj.y - 16)\n    this.obstaclesMap[collitionIndex] = obj.state ? 0 : -1\n    this.setSight()\n  },\n  generateShadow (collitionIndex, pl) {\n    const shadow = new Array(1024).fill(0)\n    const playerX = Math.floor(collitionIndex % 32)\n    const playerY = Math.floor(collitionIndex / 32)\n    for (let y = 0; y < 32; y++) {\n      for (let x = 0; x < 32; x++) {\n        // Calculate angle and distance from player to ever other item in obstaclesMap\n        const dx = x - playerX\n        const dy = y - playerY\n        const angle = Math.atan2(dy, dx)\n        const distance = Math.sqrt(dx ** 2 + dy ** 2)\n        // Verificar si hay obstrucciones en la línea de vista\n        let visibleObstacle = false\n        for (let d = 1; d <= distance; d++) {\n          const xObstruction = Math.round(playerX + d * Math.cos(angle))\n          const yObstruction = Math.round(playerY + d * Math.sin(angle))\n          const obstructionPosition = yObstruction * 32 + xObstruction\n          if (xObstruction >= 0 && xObstruction < 32 && yObstruction >= 0 && yObstruction < 32) {\n            if (this.obstaclesMap[obstructionPosition] !== 0) {\n              if (!visibleObstacle) {\n                shadow[obstructionPosition] = 1\n                visibleObstacle = true\n              }\n              break\n            } else {\n              shadow[obstructionPosition] = 1\n            }\n          }\n        }\n      }\n    }\n    ctxSight.clearRect(pl.x + 8, pl.y + 16, 16, 16)\n    shadow.forEach((val, index) => {\n      if (val === 0) return\n      ctxSight.clearRect((index % 32) * 16, Math.floor(index / 32) * 16, 16, 16)\n    })\n    ctxSight.closePath()\n  },\n  generateSight (vg) {\n    if (vg.props.Object?.state) return\n    const mapa = this.collitionMap\n    const filas = 32\n    const columnas = 32\n    const tamanoMapa = filas * columnas\n    const sombra = new Array(tamanoMapa).fill(0)\n    let [x, y] = [vg.position.x, vg.position.y]\n\n    const apertura = 60 / 2\n    let rangoAngulos\n    if (vg.props.type === 'guard' && ['down', 'left', 'up'].includes(vg.direction)) x -= 1\n    if (vg.direction === 'right') rangoAngulos = [360 - apertura, apertura]\n    if (vg.direction === 'down') rangoAngulos = [90 - apertura, 90 + apertura]\n    if (vg.direction === 'left') rangoAngulos = [180 - apertura, 180 + apertura]\n    if (vg.direction === 'up') rangoAngulos = [270 - apertura, 270 + apertura]\n\n    if (vg.props.type === 'camera') {\n      if (['right', 'left'].includes(vg.direction)) x -= 1\n      if (vg.direction === 'right') rangoAngulos = [0, 45]\n      if (vg.direction === 'left') rangoAngulos = [135, 180]\n    }\n\n    const posicionUnidad = this.computePosition(x, y).collitionIndex\n\n    const xUnidad = Math.floor(posicionUnidad % columnas)\n    const yUnidad = Math.floor(posicionUnidad / columnas)\n\n    for (let y = 0; y < filas; y++) {\n      for (let x = 0; x < columnas; x++) {\n      // Calcular ángulo y distancia desde la unidad hasta la posición actual\n        const dx = x - xUnidad\n        const dy = y - yUnidad\n        const angulo = Math.atan2(dy, dx)\n\n        // Convertir el ángulo a grados\n        const anguloGrados = (angulo * 180) / Math.PI\n\n        // Mapear el ángulo al rango [0, 360)\n        const anguloMapeado = (anguloGrados + 360) % 360\n\n        // Verificar si el ángulo está dentro del rango especificado\n        let anguloEnRango = false\n        if (rangoAngulos[0] <= rangoAngulos[1]) {\n          anguloEnRango = rangoAngulos[0] <= anguloMapeado && anguloMapeado <= rangoAngulos[1]\n        } else {\n          anguloEnRango =\n          anguloMapeado >= rangoAngulos[0] || anguloMapeado <= rangoAngulos[1]\n        }\n\n        if (anguloEnRango) {\n          const distancia = Math.sqrt((dx ** 2) + (dy ** 2))\n\n          // Verificar si hay obstrucciones en la línea de vista\n          let visibleObstacle = false\n          for (let d = 1; d <= distancia; d++) {\n            const xObstruccion = Math.round(xUnidad + d * Math.cos(angulo))\n            const yObstruccion = Math.round(yUnidad + d * Math.sin(angulo))\n            const posicionObstruccion = yObstruccion * columnas + xObstruccion\n\n            if (\n              xObstruccion >= 0 &&\n              xObstruccion < columnas &&\n              yObstruccion >= 0 &&\n              yObstruccion < filas\n            ) {\n              if (mapa[posicionObstruccion] !== 0) {\n                if (!visibleObstacle) {\n                  sombra[posicionObstruccion] = 1\n                  visibleObstacle = true\n                }\n                break\n              } else {\n                sombra[posicionObstruccion] = 1\n              }\n            }\n          }\n        }\n      }\n    }\n\n    game.setTriggers({ type: 'light', value: sombra })\n\n    Vigilance.ctxSight.beginPath()\n    sombra.forEach((val, index) => {\n      if (val === 0) return\n      Vigilance.ctxSight.rect((index % 32) * 16, Math.floor(index / 32) * 16, 16, 16)\n    })\n    Vigilance.ctxSight.fillStyle = `${this.palette[11]}66`\n    Vigilance.ctxSight.fill()\n    Vigilance.ctxSight.closePath()\n  },\n  setTriggers ({ type, value }) {\n    if (type === 'light') {\n      value.forEach((value, key) => {\n        if (value) this.alertTrigger[key] = value\n      })\n    }\n    if (type === 'halt') {\n      value.forEach((value, key) => {\n        if (value) this.haltTrigger[key] = value\n      })\n    }\n  },\n  testTrigger (collitionIndex, actioner) {\n    if (this.alertTrigger[collitionIndex] && !this.found) {\n      this.found = new Date().getTime()\n      foundSFX()\n      ctxVfx.fillStyle = this.palette[1]\n      this.displayText(actioner.properties.foundMessage, actioner)\n      setTimeout(() => { actioner.clearText() }, 3000)\n    }\n  },\n  testHalt (collitionIndex) {\n    if (this.haltTrigger[collitionIndex]) {\n      const player = Player.getCurrent()\n      player.freezed = true\n      const guard = Vigilance.getInteractingWith(Player.getCurrent())\n      guard.canMove = false\n      const { x: px, y: py } = player.bound\n      const { x: vx, y: vy } = guard.col\n\n      const deltaX = vx - px\n      const deltaY = vy - py\n      if (Math.abs(deltaX) > Math.abs(deltaY)) guard.direction = deltaX > 0 ? 'left' : 'right'\n      else guard.direction = deltaY > 0 ? 'up' : 'down'\n      if (!this.found) {\n        this.found = new Date().getTime()\n        foundSFX()\n      }\n      ctxVfx.fillStyle = this.palette[1]\n      this.displayText('Intruder caught!', guard)\n      setTimeout(() => { guard.clearText() }, 3000)\n    }\n  },\n  setSight () {\n    if (noShadows) return\n    const players = Player.instances.map(({ position }) => position)\n    ctxSight.beginPath()\n    ctxSight.fillStyle = this.palette[0]\n    ctxSight.rect(0, 0, 512, 512)\n    ctxSight.fill()\n    ctxSight.closePath()\n    players.forEach(pl => {\n      this.generateShadow(this.computePosition(pl.x, pl.y).collitionIndex, pl)\n    })\n  },\n  displayText (text, obj) {\n    obj.clearText()\n    ctxVfx.font = '10px \"Press Start 2P\"'\n    ctxVfx.textAlign = 'center'\n    ctxVfx.fillText(text, obj.x + obj.width / 2, obj.y)\n    const textSize = ctxVfx.measureText(text)\n    const height = Math.ceil(textSize.actualBoundingBoxAscent + textSize.actualBoundingBoxDescent) + 2\n    obj.textBound = {\n      y: obj.y - height,\n      w: textSize.width,\n      h: height,\n      x: obj.x + obj.width / 2 - (textSize.width / 2)\n    }\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  global.game = game\n}\n","const tableOfFreq = {\n  C0: 16.35,\n  Db0: 17.32,\n  D0: 18.35,\n  Eb0: 19.45,\n  E0: 20.60,\n  F0: 21.83,\n  Gb0: 23.12,\n  G0: 24.50,\n  Ab0: 25.96,\n  A0: 27.50,\n  Bb0: 29.14,\n  B0: 30.87,\n  C1: 32.70,\n  Db1: 34.65,\n  D1: 36.71,\n  Eb1: 38.89,\n  E1: 41.20,\n  F1: 43.65,\n  Gb1: 46.25,\n  G1: 49.00,\n  Ab1: 51.91,\n  A1: 55.00,\n  Bb1: 58.27,\n  B1: 61.74,\n  C2: 65.41,\n  Db2: 69.30,\n  D2: 73.42,\n  Eb2: 77.78,\n  E2: 82.41,\n  F2: 87.31,\n  Gb2: 92.50,\n  G2: 98.00,\n  Ab2: 103.83,\n  A2: 110.00,\n  Bb2: 116.54,\n  B2: 123.47,\n  C3: 130.81,\n  Db3: 138.59,\n  D3: 146.83,\n  Eb3: 155.56,\n  E3: 164.81,\n  F3: 174.61,\n  Gb3: 185.00,\n  G3: 196.00,\n  Ab3: 207.65,\n  A3: 220.00,\n  Bb3: 233.08,\n  B3: 246.94,\n  C4: 261.63,\n  Db4: 277.18,\n  D4: 293.66,\n  Eb4: 311.13,\n  E4: 329.63,\n  F4: 349.23,\n  Gb4: 369.99,\n  G4: 392.00,\n  Ab4: 415.30,\n  A4: 440.00,\n  Bb4: 466.16,\n  B4: 493.88,\n  C5: 523.25,\n  Db5: 554.37,\n  D5: 587.33,\n  Eb5: 622.25,\n  E5: 659.25,\n  F5: 698.46,\n  Gb5: 739.99,\n  G5: 783.99,\n  Ab5: 830.61,\n  A5: 880.00,\n  Bb5: 932.33,\n  B5: 987.77,\n  C6: 1046.50,\n  Db6: 1108.73,\n  D6: 1174.66,\n  Eb6: 1244.51,\n  E6: 1318.51,\n  F6: 1396.91,\n  Gb6: 1479.98,\n  G6: 1567.98,\n  Ab6: 1661.22,\n  A6: 1760.00,\n  Bb6: 1864.66,\n  B6: 1975.53,\n  C7: 2093.00,\n  Db7: 2217.46,\n  D7: 2349.32,\n  Eb7: 2489.02,\n  E7: 2637.02,\n  F7: 2793.83,\n  Gb7: 2959.96,\n  G7: 3135.96,\n  Ab7: 3322.44,\n  A7: 3520.00,\n  Bb7: 3729.31,\n  B7: 3951.07,\n  C8: 4186.01,\n  Db8: 4434.92,\n  D8: 4698.63,\n  Eb8: 4978.03,\n  E8: 5274.04,\n  F8: 5587.65,\n  Gb8: 5919.91,\n  G8: 6271.93,\n  Ab8: 6644.88,\n  A8: 7040.00,\n  Bb8: 7458.62,\n  B8: 7902.13\n}\nconst audioCtx = new (window.AudioContext || window.webkitAudioContext || window.audioContext)()\nconst beep = (duration, frequency, type, volume, second = false) => {\n  const noteLength = duration / 1000\n  const oscillator = audioCtx.createOscillator()\n  const gainNode = audioCtx.createGain()\n  gainNode.connect(audioCtx.destination)\n  const attackTime = 0.01\n  const sustainLevel = volume\n  const releaseTime = 0.4\n  gainNode.gain.setValueAtTime(0, 0)\n  gainNode.gain.linearRampToValueAtTime(sustainLevel, audioCtx.currentTime + noteLength * attackTime)\n  gainNode.gain.setValueAtTime(sustainLevel, audioCtx.currentTime + noteLength - noteLength * releaseTime)\n  gainNode.gain.linearRampToValueAtTime(0, audioCtx.currentTime + noteLength)\n  oscillator.type = type\n  oscillator.frequency.setValueAtTime(frequency, 0)\n  if (second) {\n    oscillator.frequency.linearRampToValueAtTime(\n      second, audioCtx.currentTime + noteLength\n    )\n  }\n  oscillator.start(0)\n  oscillator.stop(audioCtx.currentTime + noteLength)\n  oscillator.connect(gainNode)\n}\n\n// eslint-disable-next-line no-unused-vars\nexport const playNote = ([note, ...notes], volume = 0.1, type = 'triangle') => {\n  if (!note) return\n  const [duration, frequency] = note\n  beep(duration, frequency, type, volume)\n  const timer = setTimeout(() => {\n    clearTimeout(timer)\n    playNote(notes, volume, type)\n  }, duration)\n}\n\n// eslint-disable-next-line no-unused-vars\nexport const createSoundMap = (frequencies, durations) => {\n  return frequencies.map((note, index) => {\n    return [\n      durations[index],\n      tableOfFreq[note] || 0\n    ]\n  })\n}\nexport const foundSFX = _ => {\n  playNote(createSoundMap(\n    ['Fb2', 'F2', 'Gb2', 'G2', 'Ab2', 'A2', 'Bb2', 'B2', 'Bb2', 'C3', 'Db3', 'D3'],\n    [40, 160, 40, 160, 40, 160, 40, 160, 40, 160, 40, 160]\n  ), 0.1, 'square')\n}\nexport const siren = game => {\n  if (game.gameOver) return\n  beep(1500, 523.25, 'triangle', 0.1, 880.00)\n  setTimeout(() => {\n    siren(game)\n  }, 1500)\n}\n","import { game, drawCollitions } from './game'\nimport { Obj } from './objects'\nimport { tileset } from './index'\n\nconst ctxVfx = document.getElementById('vfx').getContext('2d')\n\nexport class Vigilance {\n  constructor (item) {\n    this.props = item\n    this.position = { x: item.x, y: item.y }\n    this.canMove = true\n    this.width = this.props.width\n    this.clearText = () => Vigilance.clearText(this)\n    if (!Vigilance.instances) Vigilance.instances = []\n    Vigilance.instances.push(this)\n  }\n\n  static ctx = document.getElementById('vigilance').getContext('2d')\n  static ctxSight = document.getElementById('light').getContext('2d')\n\n  static clearText (obj) {\n    if (obj.textBound) {\n      const bounds = obj.textBound\n      ctxVfx.clearRect(bounds.x - 1, bounds.y - 1, bounds.w + 2, bounds.h + 2)\n    }\n  }\n\n  static getCamera (id) {\n    return Vigilance.instances.find(itm => itm.id === id)\n  }\n\n  static getActiveVigilance () {\n    return Vigilance.instances\n      .filter(vg => vg.props.start)\n      .filter(vg => {\n        if (vg.props.type === 'camera' && game.hasEnergy) return true\n        if (vg.props.type !== 'camera') return true\n        return false\n      })\n  }\n\n  static getAll () {\n    return Vigilance.instances\n  }\n\n  static createAll (instances) {\n    Vigilance.chain = JSON.parse(JSON.stringify(instances))\n      .map((itm, _index, self) => {\n        const pointer = itm.properties.find(prop => prop.name === 'next')\n        if (!pointer) return itm\n        itm.next = pointer.value\n        delete itm.properties\n        delete itm.name\n        delete itm.rotation\n        delete itm.type\n        delete itm.visible\n        const next = self.find(stop => stop.id === pointer.value)\n        let direction = 'up'\n        if (itm.x < next.x) direction = 'right'\n        if (itm.x > next.x) direction = 'left'\n        if (itm.y < next.y) direction = 'down'\n        itm.direction = direction\n        return itm\n      })\n    instances\n      .map(itm => {\n        const start = itm.properties.find(prop => prop.name === 'start')\n        if (start) itm.start = start.value\n        else itm.start = false\n        if (itm.type === 'camera') itm.start = true\n        return itm\n      })\n      .filter(obj => {\n        if (obj.type === 'guard' && !obj.start) return false\n        return true\n      })\n      .map(itm => {\n        Obj.prototypes.find(obj => obj.name === itm.type).properties\n          .forEach(({ name, value }) => {\n            itm[name] = JSON.parse(value)\n          })\n        return itm\n      })\n      .forEach(instance => {\n        if (instance.type === 'camera') {\n          const direction = instance.properties.find(itm => itm.name === 'direction').value\n          instance.direction = direction\n          instance.start = true\n          delete instance.properties\n          instance.Object = Obj.addObject(instance)\n        }\n        return new Vigilance(instance)\n      })\n  }\n\n  static calculateDistance (x1, y1, x2, y2) {\n    return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\n  }\n\n  static getInteractingWith ({ bound }) {\n    const { x: px, y: py } = bound\n    let closest = null\n    let minDistance = Infinity\n    Vigilance.instances\n      .filter(vg => vg.props.type === 'guard')\n      .forEach(vg => {\n        const { x: vx, y: vy } = vg.col\n        const distance = Vigilance.calculateDistance(px, py, vx, vy)\n        if (distance < minDistance) {\n          minDistance = distance\n          closest = vg\n        }\n      })\n    return closest\n  }\n\n  captureRadius ({ x, y, w, h }) {\n    const filas = 32\n    const columnas = 32\n    const sombra = Array(filas * columnas).fill(0)\n\n    // Calcular las coordenadas de la matriz que cubre el elemento\n    const inicioFila = Math.max(0, Math.floor(y / 16))\n    const finFila = Math.min(filas, Math.ceil((y + h) / 16))\n    const inicioColumna = Math.max(0, Math.floor(x / 16))\n    const finColumna = Math.min(columnas, Math.ceil((x + w) / 16))\n\n    // Marcar las celdas correspondientes con 1\n    for (let i = inicioFila; i < finFila; i++) {\n      for (let j = inicioColumna; j < finColumna; j++) {\n        const indice = i * columnas + j\n        sombra[indice] = 1\n      }\n    }\n    game.setTriggers({ type: 'halt', value: sombra })\n    if (drawCollitions) {\n      Vigilance.ctxSight.beginPath()\n      sombra.forEach((val, index) => {\n        if (val === 0) return\n        Vigilance.ctxSight.rect((index % 32) * 16, Math.floor(index / 32) * 16, 16, 16)\n      })\n      Vigilance.ctxSight.fillStyle = `${game.palette[11]}66`\n      Vigilance.ctxSight.fill()\n      Vigilance.ctxSight.closePath()\n    }\n  }\n\n  frame () {\n    this.x = this.position.x\n    this.y = this.position.y\n    if (!this.canMove) return this.draw()\n    if (!this.id) this.id = this.props.id\n    const pointer = Vigilance.chain.find(prop => prop.id === this.id)\n    const next = Vigilance.chain.find(stop => stop.id === pointer.next) || {}\n    this.direction = pointer.direction\n    if (this.direction === 'right') Object.assign(this.position, { x: this.position.x + 16 })\n    if (this.direction === 'left') Object.assign(this.position, { x: this.position.x - 16 })\n    if (this.direction === 'down') Object.assign(this.position, { y: this.position.y + 16 })\n    if (this.direction === 'up') Object.assign(this.position, { y: this.position.y - 16 })\n\n    this.col = { x: this.position.x - 16, y: this.position.y, w: 64, h: 64 }\n\n    if (this.props.type === 'camera') this.direction = this.props.direction\n    if (next.x === this.position.x && next.y === this.position.y) {\n      this.id = next.id\n    }\n    this.step = !this.step\n    this.draw()\n  }\n\n  draw () {\n    if (this.props.type === 'camera') return // cameras are drawed in the game loop\n    const normAlt = { true: 'Alt', false: '' }[!this.step]\n    const sprite = `${this.direction}${normAlt}`\n    const ctx = Vigilance.ctx\n    ctx.beginPath()\n    ctx.drawImage(\n      tileset,\n      this.props[sprite].x,\n      this.props[sprite].y,\n      this.props.width,\n      this.props.height,\n      this.position.x,\n      this.position.y,\n      this.props.width,\n      this.props.height\n    )\n    ctx.closePath()\n    this.captureRadius(this.col)\n    return sprite\n  }\n}\n","import { game, drawCollitions } from './game'\nimport { Player } from './player'\nimport { tileset } from './index'\nimport { playNote, createSoundMap } from '../../sfx'\n\nconst ctxVfx = document.getElementById('vfx').getContext('2d')\n\nexport class Obj {\n  constructor (obj) {\n    this.ctx = document.getElementById('objects').getContext('2d')\n    Object.entries(obj).forEach(([key, value]) => {\n      this[key] = JSON.parse(JSON.stringify(value))\n    })\n    const proto = this.properties\n    this.state = !!this.state\n    this.combinationStep = 0\n    this.combinationTicks = 0\n    this.combinationFailed = false\n    this.combinationSuccess = false\n    this.clearText = () => Obj.clearText(this)\n    this.col = {\n      x: this.x + proto.col.x,\n      y: this.y + proto.col.y,\n      w: proto.col.w,\n      h: proto.col.h\n    }\n    this.collitionIndex = game.computePosition(this.col.x, this.col.y).collitionIndex - 1\n  }\n\n  static setPrototypes (objs) {\n    Obj.prototypes = objs.filter(({ type }) => type === 'prototype')\n  }\n\n  static clearText (obj) {\n    if (obj.textBound) {\n      const bounds = obj.textBound\n      ctxVfx.clearRect(bounds.x - 1, bounds.y - 1, bounds.w + 2, bounds.h + 2)\n    }\n  }\n\n  static setObjects (objs) {\n    objs\n      .filter(({ type }) => type !== 'prototype')\n      .forEach(obj => {\n        Obj.addObject(obj)\n      })\n  }\n\n  static addObject (obj) {\n    if (!obj.properties) obj.properties = {}\n    if (Array.isArray(obj.properties)) {\n      const tmpProps = {}\n      obj.properties.forEach(({ name, value }) => {\n        tmpProps[name] = value\n      })\n      obj.properties = tmpProps\n    }\n    Obj.prototypes.find(prot => prot.name === obj.type).properties\n      .forEach(({ name, value }) => {\n        obj.properties[name] = JSON.parse(value)\n      })\n    const nobj = new Obj(obj)\n    if (!Obj.instances) Obj.instances = []\n    Obj.instances.push(nobj)\n    nobj.draw()\n    return nobj\n  }\n\n  static returnCollition (x, y, ply) {\n    const left1 = x\n    const right1 = x + ply.bound.w\n    const top1 = y\n    const bottom1 = y + ply.bound.h\n\n    return Obj.instances.find(itm => {\n      const left2 = itm.col.x\n      const right2 = itm.col.x + itm.col.w\n      const top2 = itm.col.y\n      const bottom2 = itm.col.y + itm.col.h\n      return left1 < right2 && right1 > left2 && top1 < bottom2 && bottom1 > top2\n    })\n  }\n\n  static activateObject (intentedX, intentedY) {\n    const ply = Player.getCurrent()\n    const x = intentedX + ply.position.col.x\n    const y = intentedY + ply.position.col.y\n    const obj = Obj.returnCollition(x, y, ply)\n    if (!obj) return false\n\n    if (obj.properties.restrictFrom?.includes(ply.movement)) return\n\n    let direction = { x: 32, y: 0 }\n    if (x < (ply.position.x + 8)) direction.x = -32\n    if (y < (ply.position.y + 32)) direction = { x: 0, y: -48 }\n    if (y > (ply.position.y + 32)) direction = { x: 0, y: 48 }\n\n    ply.interactingWith = obj\n\n    if (obj.state === true) {\n      if (obj.properties.gateway) {\n        ply.move({ x: ply.position.x + direction.x, y: ply.position.y + direction.y }, true)\n      }\n      if (obj.properties.returnState) {\n        obj.setState(false)\n        obj.draw()\n        return false\n      }\n    }\n\n    if (obj.properties.interactive) {\n      ply.stance = 'kneeled'\n      ply.draw()\n    }\n\n    if (obj.properties.changeConditions) return obj.changeConditions()\n    if (!obj.state) obj.setState(true)\n    obj.draw()\n    return false\n  }\n\n  draw () {\n    if (this.type === 'door') game.toggleVisibility(this)\n    const proto = this.properties\n    this.ctx.clearRect(this.x, this.y, this.width, this.height)\n    if (this.type === 'camera') {\n      const normAlt = this.state ? '' : 'Alt'\n      proto[this.state] = this[`${this.direction}${normAlt}`]\n    }\n    this.ctx.drawImage(\n      tileset,\n      proto[this.state].x, // source x\n      proto[this.state].y, // source y\n      this.width, // source width\n      this.height, // source height\n      this.x, // desination x\n      this.y, // destination y\n      this.width, // destination width\n      this.height // destination height\n    )\n    if (this.type === 'statue') this.statue()\n    if (drawCollitions) {\n      // draw collition on object\n      this.ctx.rect(\n        this.col.x,\n        this.col.y,\n        this.col.w,\n        this.col.h\n      )\n      this.ctx.stroke()\n    }\n  }\n\n  setState (value) {\n    if (this.type === 'fuse') {\n      game.hasEnergy = !value\n    }\n    if (!this.state && value) {\n      if (['computer', 'safe', 'statue'].includes(this.type)) this.success()\n    }\n    this.state = value\n    game.triggerSight()\n  }\n\n  changeConditions () {\n    if (this[this.type]) this[this.type]()\n  }\n\n  success () {\n    const tableOfValues = {\n      computer: [\n        ['Cat Pictures', 1],\n        ['Blackmail evidence', 1000],\n        ['Confidential documents', 2000]\n      ],\n      safe: [\n        ['Some cash', 500],\n        ['Good cash', 1000],\n        ['Very good cash', 1500],\n        ['Confidential documents', 2000],\n        ['Diamonds', 3000]\n      ],\n      statue: [\n        ['Valuable statue', 100],\n        ['Limited edition figure', 300],\n        ['Action figure', 70],\n        ['Collectable toy', 80]\n      ]\n    }\n    const set = tableOfValues[this.type]\n    if (!game.brain.loot) game.brain.set('loot', [])\n    const loot = set[~~(set.length * Math.random() | 0)]\n    game.brain.push('loot', loot)\n  }\n\n  reset () {\n    if (this.properties.returnState) {\n      this.setState(false)\n      this.draw()\n    }\n    if (this.type === 'safe' || this.type === 'computer') {\n      this.combinationStep = 0\n      this.combinationTicks = 0\n      this.combinationFailed = false\n      this.booting = false\n      this.clearText()\n      ctxVfx.clearRect(this.x + 8, this.y + 4, 16, 8)\n      if (this.type === 'computer') {\n        playNote(createSoundMap(['E4', 'G3'], [60, 100]), 0.4)\n        if (this.bootingTime) clearTimeout(this.bootingTime)\n      }\n    }\n  }\n\n  computer () {\n    const getNewDirection = (prev) => {\n      const directions = ['left', 'up', 'right']\n      let direction = prev\n      while (direction === prev) {\n        direction = directions[Math.floor(Math.random() * directions.length)]\n      }\n      return direction\n    }\n    if (!this.combination) {\n      this.combination = []\n      let prev = null\n      for (let x = 0; x <= 10; x++) {\n        const newDirection = getNewDirection(prev)\n        this.combination.push(newDirection)\n        prev = newDirection\n      }\n    }\n    if (this.booting) return\n    if (this.combinationStep === 0) {\n      this.booting = true\n      this.computerDisplay()\n      playNote(createSoundMap(['G3', 'E4'], [60, 100]), 0.4)\n      this.bootingTime = setTimeout(() => {\n        this.combinationStep += 1\n        this.computerDisplay()\n        this.booting = false\n      }, 1000)\n      return\n    }\n    const ply = Player.getCurrent()\n    const direction = this.combination[this.combinationStep]\n    if (!direction) {\n      this.combinationSuccess = true\n      this.computerDisplay()\n      ctxVfx.fillStyle = game.palette[1]\n      game.displayText('Computer hacked', this)\n      this.setState(true)\n      return\n    }\n    if (this.combinationSuccess || this.combinationFailed) return\n    if (direction === ply.movement) {\n      this.combinationStep += 1\n      if (!this.combination[this.combinationStep]) return this.computer()\n    } else {\n      this.combinationFailed = true\n    }\n    this.computerDisplay()\n  }\n\n  statue () {\n    const proto = this.properties\n    const source = proto[proto.variant]\n    this.ctx.clearRect(\n      this.x + 4,\n      this.y - 4,\n      source.w,\n      source.h\n    )\n    if (this.state) return\n    this.ctx.drawImage(\n      tileset,\n      source.x, // source x\n      source.y, // source y\n      source.w, // source width\n      source.h, // source height\n      this.x + 4, // desination x\n      this.y - 4, // destination y\n      source.w, // destination width\n      source.h // destination height\n    )\n  }\n\n  safe () {\n    if (this.combinationFailed) return\n    if (!this.combination) {\n      this.combination = [\n        ...new Array(Math.round(Math.random() * (9 - 5) + 5))\n      ].map(_ => Math.round(Math.random() * 5) + 1)\n      this.combination[1] = Math.max(2, this.combination[1])\n    }\n    if (this.combinationStep === 0) {\n      this.combinationStep += 1\n      return\n    }\n    const direction = ['left', 'right'][this.combinationStep % 2]\n    const ply = Player.getCurrent()\n    if (ply.movement === 'up' && this.combinationSuccess && this.combinationStep !== 1) {\n      this.setState(true)\n      this.draw()\n      return\n    }\n\n    if (this.combinationSuccess && this.state) return\n\n    if (direction === ply.movement) {\n      this.combinationTicks += 1\n      displayCombination(this.combination, this.combinationStep, this)\n    } else {\n      this.combinationFailed = true\n      this.combinationSuccess = false\n      displayCombination(this.combination, this.combinationStep, this)\n      playNote(createSoundMap(['E4', '', 'A3'], [60, 200, 250]), 0.4)\n      return\n    }\n\n    if (this.combination[this.combinationStep] - this.combinationTicks === 0) {\n      this.combinationStep += 1\n      this.combinationTicks = 0\n      displayCombination(this.combination, this.combinationStep, this)\n      if (this.combination[this.combinationStep]) playNote(createSoundMap(['A3'], [60]), 0.4)\n    } else {\n      playNote(createSoundMap(['A2'], [60]), 0.4)\n    }\n\n    if (!this.combination[this.combinationStep]) {\n      this.combinationSuccess = true\n      displayCombination(this.combination, this.combinationStep, this)\n      playNote(createSoundMap(['G5', ' ', 'A5'], [50, 50, 50]), 0.4)\n    }\n  }\n\n  computerDisplay () {\n    ctxVfx.clearRect(this.x + 8, this.y + 4, 16, 8)\n\n    ctxVfx.beginPath()\n    if (this.combinationStep === 0) {\n      ctxVfx.fillStyle = game.palette[3]\n    } else if (this.combinationFailed) {\n      ctxVfx.fillStyle = game.palette[4]\n    } else if (this.combinationSuccess) {\n      ctxVfx.fillStyle = game.palette[5]\n    } else {\n      ctxVfx.fillStyle = game.palette[3]\n    }\n\n    ctxVfx.rect(this.x + 8, this.y + 4, 16, 8)\n    ctxVfx.fill()\n    ctxVfx.closePath()\n\n    if (this.combinationStep === 0) return\n    if (this.combinationFailed || this.combinationSuccess) return\n\n    ctxVfx.beginPath()\n    ctxVfx.fillStyle = game.palette[5]\n    const displayDirection = {\n      up: [this.x + 12, this.y + 4, 8, 4],\n      left: [this.x + 8, this.y + 4, 4, 8],\n      right: [this.x + 20, this.y + 4, 4, 8]\n    }[this.combination[this.combinationStep]]\n    ctxVfx.rect(...displayDirection)\n    ctxVfx.fill()\n    ctxVfx.closePath()\n  }\n}\n\nconst displayCombination = (combination, combinationStep, obj) => {\n  let text = new Array(combination.length - 1).fill('')\n  text = text.map((_itm, key) => {\n    if (key === combinationStep - 1) return '[*]'\n    if (key >= combinationStep - 1) {\n      // maybe dificulty ?\n      // const direction = ['>', '<'][key % 2]\n      // return `[${direction}]`\n      // return '[*]'\n      return ''\n    }\n    return `[${combination[key + 1]}]`\n  }).filter(itm => itm !== '').join('')\n  ctxVfx.fillStyle = game.palette[1]\n  if (obj.combinationSuccess) {\n    ctxVfx.fillStyle = game.palette[1]\n    text = 'Safe unlocked'\n  }\n  if (obj.combinationFailed) ctxVfx.fillStyle = game.palette[4]\n  game.displayText(text, obj)\n}\n","import { game, drawCollitions } from './game'\nimport { Obj } from './objects'\nimport { tileset } from './index'\nimport { gameOver } from '../gameOver'\n\nconst ctxVfx = document.getElementById('vfx').getContext('2d')\n\nexport class Player {\n  constructor (ctx, x, y, active = false) {\n    this.position = {\n      x, y, flip: true, inside: false, col: { x: 8, y: 32, w: 16, h: 16 }\n    }\n    this.stance = 'standing'\n    this.active = active\n    this.ctx = ctx\n    this.playerScaped = false\n    this.freezed = false\n    this.properties = { foundMessage: 'Intruder found!' }\n    this.x = x\n    this.y = y\n    this.clearText = () => Player.clearText(this)\n    if (!Player.instances) Player.instances = []\n    Player.instances.push(this)\n  }\n\n  static create (...params) {\n    return new Player(...params)\n  }\n\n  static getCurrent () {\n    return Player.instances.find(player => player.active)\n  }\n\n  static clearText (obj) {\n    if (obj.textBound) {\n      const bounds = obj.textBound\n      ctxVfx.clearRect(bounds.x - 1, bounds.y - 1, bounds.w + 2, bounds.h + 2)\n    }\n  }\n\n  setBound () {\n    this.bound = {\n      x: this.position.x + this.position.col.x,\n      y: this.position.y + this.position.col.y,\n      w: this.position.col.w,\n      h: this.position.col.h\n    }\n  }\n\n  toggleActivation () {\n    this.active = !this.active\n    if (this.playerScaped) return\n    this.draw()\n    if (!this.active) return\n    const offset = this.position.flip ? 16 : 12\n    this.ctx.beginPath()\n    this.ctx.rect(this.position.x + offset, this.position.y + 24, 4, 4)\n    this.ctx.fillStyle = game.palette[1]\n    this.ctx.fill()\n    this.ctx.closePath()\n  }\n\n  return () {\n    if (!this.playerScaped) return\n    this.playerScaped = false\n    const { x, y } = this\n    if (y < 20) this.y = 20\n    if (x < 100) this.x = 100\n    if (x > 400) this.x = 400\n    game.displayText('Returned', this)\n    setTimeout(() => { this.clearText() }, 1000)\n  }\n\n  scaped (x, y) {\n    if (x === -24 || x === 504 || y === -32 || y === 480) {\n      ctxVfx.fillStyle = game.palette[1]\n      if (y < 20) this.y = 20\n      if (x < 100) this.x = 100\n      if (x > 400) this.x = 400\n      game.displayText('Escaped', this)\n      setTimeout(() => { this.clearText() }, 1000)\n      this.playerScaped = true\n      Player.instances.forEach(player => player.toggleActivation())\n      this.ctx.clearRect(0, 0, 512, 512)\n      if (!Player.instances.some(pl => !pl.playerScaped)) {\n        game.gameOver = true\n        clearInterval(game.timer)\n        gameOver(game.user)\n      }\n    }\n    return this.playerScaped\n  }\n\n  move ({ x = this.position.x, y = this.position.y }, jump = false) {\n    if (game.gameOver || this.playerScaped || this.freezed) return\n    this.movement = 'up'\n    if (x - this.position.x > 0) this.movement = 'right'\n    if (x - this.position.x < 0) this.movement = 'left'\n    if (y - this.position.y > 0) this.movement = 'down'\n    this.setBound()\n    if (this.interactingWith && this.interactingWith.properties.constraints) {\n      const { x: oX, y: oY } = this.interactingWith\n      const pX = this.position.x + 8\n      const pY = this.position.col.y + this.position.y\n      let relative = 'up'\n      if (oX < pX) relative = 'left'\n      else if (oX > pX) relative = 'right'\n      else if (oY > pY) relative = 'down'\n\n      // dont let move char if not in constraints\n      if (!this.interactingWith.properties.constraints.includes(this.movement)) {\n        return this.interactingWith.changeConditions()\n      }\n\n      if (\n        (relative === 'up' && this.movement === 'down') ||\n        (relative === 'down' && this.movement === 'up')\n      ) {\n        this.interactingWith.reset()\n        this.stance = 'standing'\n        this.draw()\n        this.interactingWith.draw()\n        delete this.interactingWith\n        return\n      }\n    }\n\n    // we moved away, lets clear the object\n    delete this.interactingWith\n\n    const computed = game.computePosition(x, y + 16)\n    if (!jump) {\n      if (this.scaped(x, y)) return\n      if (computed.x < 1 || computed.x > 32 || computed.y < 2 || computed.y > 32) return\n      if (Obj.activateObject(x, y)) return\n      if (game.collitionMap[computed.collitionIndex] !== 0) return\n    }\n    this.position.x = x\n    this.position.y = y\n    this.x = x\n    this.y = y\n    this.width = this.bound.w\n    game.testTrigger(computed.collitionIndex, this)\n    game.testHalt(computed.collitionIndex)\n    this.draw()\n  }\n\n  draw () {\n    this.setBound()\n    const { collitionIndex } = game.computePosition(this.position.x, this.position.y)\n    this.position.inside = game.insideMap[collitionIndex] !== 0\n    this.ctx.beginPath()\n    this.ctx.clearRect(0, 0, 512, 512)\n    let w = 32\n    let h = 48\n    let kneelOffset = { x: 0, y: 0 }\n    let [spriteX, spriteY] = {\n      // flipped, inside\n      'false,false': [64, 80],\n      'true,false': [32, 80],\n      'true,true': [32, 128],\n      'false,true': [64, 128]\n    }[[this.position.flip, this.position.inside].join(',')]\n    if (this.stance === 'kneeled') {\n      w = 32\n      h = 32\n      spriteX = 0\n      spriteY = 96\n      if (this.position.inside) spriteY = 144\n      kneelOffset = { x: 4, y: 8 }\n    }\n\n    this.ctx.drawImage(\n      tileset,\n      spriteX,\n      spriteY,\n      w,\n      h,\n      this.position.x + kneelOffset.x,\n      this.position.y + kneelOffset.y,\n      w,\n      h\n    )\n    if (drawCollitions) {\n      // draw collition on player\n      this.ctx.rect(this.bound.x, this.bound.y, this.bound.w, this.bound.h)\n      this.ctx.strokeStyle = game.palette[1]\n      this.ctx.stroke()\n    }\n    this.ctx.closePath()\n    game.setSight()\n  }\n}\n","import { gameLevel } from '../game/index.js'\nimport { game } from '../game/game.js'\nimport { Player } from '../game/player'\nimport { reset } from '../../sneaky'\nimport { userKeys } from '../../user'\n\nconst ctxBg = document.getElementById('background').getContext('2d')\n\nconst leftText = (text, y) => {\n  ctxBg.fillStyle = game.palette[1]\n  ctxBg.textAlign = 'left'\n  ctxBg.fillText(text, 50, y)\n}\nconst rightText = (text, y) => {\n  ctxBg.fillStyle = game.palette[5]\n  if (parseInt(text, 10) < 0) ctxBg.fillStyle = game.palette[4]\n  ctxBg.textAlign = 'right'\n  ctxBg.fillText(`$${text}`, 450, y)\n}\n\nexport const gameOver = user => {\n  const loot = JSON.parse(JSON.stringify(game.brain.get('loot')))\n  console.log(loot)\n  reset()\n\n  ctxBg.font = '14px \"Press Start 2P\"'\n\n  const bail = Player.instances\n    .filter(pl => {\n      return !pl.playerScaped || pl.freezed\n    })\n    .map(_ => {\n      return ['Enterpreneur caught', -2000]\n    })\n\n  let lastK\n  const total = [\n    ['Incoming balance', game.brain.get('balance')],\n    ...loot,\n    ['Daily expenses', -52],\n    ...bail\n  ]\n    .map(([desc, value], key) => {\n      lastK = key\n      leftText(desc, 100 + key * 25)\n      rightText(value, 100 + key * 25)\n      return value\n    })\n    .reduce((prev, curr) => prev + curr)\n  leftText('Total', 100 + (lastK + 3) * 25)\n  rightText(total, 100 + (lastK + 3) * 25)\n\n  ctxBg.fillStyle = game.palette[1]\n  if (total < 0) {\n    ctxBg.textAlign = 'left'\n    ctxBg.fillText('Your \"carreer\" is over', 50, 400)\n  }\n\n  game.brain.set('balance', Math.max(0, total))\n\n  setTimeout(() => {\n    ctxBg.textAlign = 'left'\n    ctxBg.fillText('[> Go back', 50, 450)\n    user.changeTrigger(eventsTrigger(user))\n  }, 2000)\n}\n\nlet throttler = -Infinity\nconst eventsTrigger = (user) => (keyCode) => {\n  const now = new Date().getTime()\n  if (now - throttler < 60) return\n  throttler = new Date().getTime()\n  playerActions(keyCode, user)\n}\n\nconst playerActions = (keyCode, user) => {\n  switch (keyCode) {\n    case userKeys.leftKey:\n      gameLevel('./levels/0001', user)\n      break\n  }\n}\n"],"names":["$741e5dc94144fd09$export$95400d94d43a5402","leftKey","upKey","rightKey","downKey","aKey","charCodeAt","bKey","$a55e885f30d13062$var$tableOfFreq","C0","Db0","D0","Eb0","E0","F0","Gb0","G0","Ab0","A0","Bb0","B0","C1","Db1","D1","Eb1","E1","F1","Gb1","G1","Ab1","A1","Bb1","B1","C2","Db2","D2","Eb2","E2","F2","Gb2","G2","Ab2","A2","Bb2","B2","C3","Db3","D3","Eb3","E3","F3","Gb3","G3","Ab3","A3","Bb3","B3","C4","Db4","D4","Eb4","E4","F4","Gb4","G4","Ab4","A4","Bb4","B4","C5","Db5","D5","Eb5","E5","F5","Gb5","G5","Ab5","A5","Bb5","B5","C6","Db6","D6","Eb6","E6","F6","Gb6","G6","Ab6","A6","Bb6","B6","C7","Db7","D7","Eb7","E7","F7","Gb7","G7","Ab7","A7","Bb7","B7","C8","Db8","D8","Eb8","E8","F8","Gb8","G8","Ab8","A8","Bb8","B8","$a55e885f30d13062$var$audioCtx","window","AudioContext","webkitAudioContext","audioContext","$a55e885f30d13062$var$beep","duration","frequency","type","volume","second","noteLength","oscillator","createOscillator","gainNode","createGain","connect","destination","gain","setValueAtTime","linearRampToValueAtTime","currentTime","start","stop","$a55e885f30d13062$export$68baa0dba130a7c0","note","notes","timer","setTimeout","clearTimeout","$a55e885f30d13062$export$def29a33f8fb4446","frequencies","durations","map","index","$a55e885f30d13062$export$270967f0cf9c45d3","_","$a55e885f30d13062$export$7eac8da43dbf25b2","game","gameOver","$91ca95b993497c18$var$ctxBg","document","getElementById","getContext","$91ca95b993497c18$var$leftText","text","y","fillStyle","$d40f0d5cf5f894a3$export$119d2a93e2780362","palette","textAlign","fillText","$91ca95b993497c18$var$rightText","parseInt","$91ca95b993497c18$export$611b5196d80f8d0e","user","lastK","loot","JSON","parse","stringify","brain","get","console","log","$a97524d8df662a03$export$aad8462122ac592b","font","bail","$d7af1a68c6d62be5$export$2616165974278734","instances","filter","pl","playerScaped","freezed","total","desc","value","key","reduce","prev","curr","set","Math","max","changeTrigger","$91ca95b993497c18$var$eventsTrigger","$91ca95b993497c18$var$throttler","Infinity","keyCode","Date","getTime","$91ca95b993497c18$var$playerActions","$1abd0cf01f2b19a8$export$29901fa26cd744fa","$d7af1a68c6d62be5$var$ctxVfx","constructor","ctx","x","active","position","flip","inside","col","w","h","stance","properties","foundMessage","clearText","push","create","params","getCurrent","find","player","obj","textBound","bounds","clearRect","setBound","bound","toggleActivation","draw","offset","beginPath","rect","fill","closePath","return","displayText","scaped","forEach","some","clearInterval","move","jump","movement","interactingWith","constraints","oX","oY","pX","pY","relative","includes","changeConditions","reset","computed","computePosition","$9966339ff104769c$export$6738a6d9146a0cdc","activateObject","collitionMap","collitionIndex","width","testTrigger","testHalt","insideMap","kneelOffset","spriteX","spriteY","join","drawImage","$1abd0cf01f2b19a8$export$49dc942d7cd17996","$d40f0d5cf5f894a3$export$b72fc7cdd53dd289","strokeStyle","stroke","setSight","$9966339ff104769c$var$ctxVfx","Object","entries","proto","state","combinationStep","combinationTicks","combinationFailed","combinationSuccess","setPrototypes","objs","prototypes","setObjects","addObject","Array","isArray","tmpProps","name","prot","nobj","returnCollition","ply","right1","bottom1","itm","left2","right2","top2","bottom2","left1","top1","intentedX","intentedY","restrictFrom","direction","gateway","returnState","setState","interactive","toggleVisibility","height","normAlt","statue","hasEnergy","success","triggerSight","tableOfValues","computer","safe","length","random","booting","bootingTime","getNewDirection","directions","floor","combination","newDirection","computerDisplay","source","variant","round","$9966339ff104769c$var$displayCombination","displayDirection","up","left","right","_itm","$7f0b9e09ad51e41d$var$ctxVfx","$7f0b9e09ad51e41d$export$d48d70e042b99166","item","props","canMove","ctxSight","getCamera","id","getActiveVigilance","vg","getAll","createAll","chain","_index","self","pointer","prop","next","rotation","visible","instance","calculateDistance","x1","y1","x2","y2","sqrt","pow","getInteractingWith","px","py","closest","minDistance","vx","vy","distance","captureRadius","sombra","filas","inicioFila","finFila","min","ceil","inicioColumna","finColumna","i","j","setTriggers","val","frame","assign","step","true","false","sprite","$d40f0d5cf5f894a3$var$ctxSight","$d40f0d5cf5f894a3$var$ctxVfx","$d40f0d5cf5f894a3$var$ctxBg","$d40f0d5cf5f894a3$export$7f5ef1932fe772bc","$d40f0d5cf5f894a3$export$a751a154160b8881","objects","alertTrigger","haltTrigger","stepValue","found","police","Player","Vigilance","Obj","ticker","generateSight","det","detection","multipleComputePosition","delay","now","color","setInterval","Set","xd","yd","add","obstaclesMap","generateShadow","shadow","playerX","playerY","dx","dy","angle","atan2","visibleObstacle","d","xObstruction","cos","yObstruction","sin","obstructionPosition","rangoAngulos","mapa","posicionUnidad","xUnidad","yUnidad","angulo","anguloMapeado","anguloGrados","PI","distancia","xObstruccion","yObstruccion","posicionObstruccion","actioner","guard","deltaX","deltaY","abs","players","textSize","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","$1abd0cf01f2b19a8$var$ctxFloor","$1abd0cf01f2b19a8$var$ctxWalls","$1abd0cf01f2b19a8$var$ctxPlayer1","$1abd0cf01f2b19a8$var$ctxPlayer2","$1abd0cf01f2b19a8$var$ctxOver","Image","$1abd0cf01f2b19a8$var$throttler","$1abd0cf01f2b19a8$var$eventsTrigger","$1abd0cf01f2b19a8$var$playerActions","frezed","$1abd0cf01f2b19a8$var$loadMetadata","section","layer","layers","$1abd0cf01f2b19a8$var$setPalette","tileset","rgbToHex","r","g","b","componentToHex","c","hex","toString","tcanv","createElement","tCtx","willReadFrequently","pixelData","getImageData","data","level","fetch","then","response","json","tileSource","onload","tile","src","$a97524d8df662a03$var$Brain","localStorage","sneaky","k","v","balance","save","$a97524d8df662a03$var$user","trigger","interval","eventsTrigger","addEventListener","items","querySelectorAll","button","eventStart","event","buttonName","target","className","split","eventEnd","querySelector","e","preventDefault","ctxBg","canvases","canv"],"version":3,"file":"index.f72c8388.js.map"}